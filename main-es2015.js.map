{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/adecptopersona/adecptopersona.component.ts","./src/app/adecptopersona/adecptopersona.component.html","./src/app/adecptopersonaprofile/adecptopersonaprofile.component.ts","./src/app/adecptopersonaprofile/adecptopersonaprofile.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/appcasonegocio/appcasonegocio.component.ts","./src/app/appcasonegocio/appcasonegocio.component.html","./src/app/appconocriticos/appconocriticos.component.ts","./src/app/appconocriticos/appconocriticos.component.html","./src/app/appcversion/appcversion.component.ts","./src/app/appcversion/appcversion.component.html","./src/app/appescolaridad/appescolaridad.component.ts","./src/app/appescolaridad/appescolaridad.component.html","./src/app/appexperiencia/appexperiencia.component.ts","./src/app/appexperiencia/appexperiencia.component.html","./src/app/appinstrumentos/appinstrumentos.component.ts","./src/app/appinstrumentos/appinstrumentos.component.html","./src/app/appnotacomentario/appnotacomentario.component.ts","./src/app/appnotacomentario/appnotacomentario.component.html","./src/app/apppresentationcard/apppresentationcard.component.ts","./src/app/apppresentationcard/apppresentationcard.component.html","./src/app/apprecomend/apprecomend.component.ts","./src/app/apprecomend/apprecomend.component.html","./src/app/appreqtecnologico/appreqtecnologico.component.ts","./src/app/appreqtecnologico/appreqtecnologico.component.html","./src/app/apptabs/apptabs.component.ts","./src/app/apptabs/apptabs.component.html","./src/app/appuploadimage/appuploadimage.component.ts","./src/app/appuploadimage/appuploadimage.component.html","./src/app/conocriticos/conocriticos.component.ts","./src/app/conocriticos/conocriticos.component.html","./src/app/controlversionappp/controlversionappp.component.ts","./src/app/controlversionappp/controlversionappp.component.html","./src/app/escolaridad/escolaridad.component.ts","./src/app/escolaridad/escolaridad.component.html","./src/app/experiencia/experiencia.component.ts","./src/app/experiencia/experiencia.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/material.module.ts","./src/app/profilesearch/profilesearch.component.ts","./src/app/profilesearch/profilesearch.component.html","./src/app/reqtecnologico/reqtecnologico.component.ts","./src/app/reqtecnologico/reqtecnologico.component.html","./src/app/rightclick/rightclick.component.ts","./src/app/rightclick/rightclick.component.html","./src/app/rightclickservice/rightclickservice.component.ts","./src/app/rightclickservice/rightclickservice.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adecptopersona',\n  templateUrl: './adecptopersona.component.html',\n  styleUrls: ['./adecptopersona.component.scss']\n})\nexport class AdecptopersonaComponent implements OnInit \n{\n  \n  ngOnInit(): void \n  {}\n  \n\n}\n","<app-apppresentationcard></app-apppresentationcard>\n<!-- <app-profilesearch></app-profilesearch> -->\n<app-appcversion></app-appcversion>\n<!-- <app-appinstrumentos></app-appinstrumentos> -->\n<app-apptabs></app-apptabs>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adecptopersonaprofile',\n  templateUrl: './adecptopersonaprofile.component.html',\n  styleUrls: ['./adecptopersonaprofile.component.scss']\n})\nexport class AdecptopersonaprofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-profilesearch></app-profilesearch>\n<app-controlversionappp></app-controlversionappp>\n<app-escolaridad></app-escolaridad>\n<app-experiencia></app-experiencia>\n<app-conocriticos></app-conocriticos>\n<app-reqtecnologico></app-reqtecnologico> \n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdecptopersonaComponent } from './adecptopersona/adecptopersona.component'; \nimport {AdecptopersonaprofileComponent} from './adecptopersonaprofile/adecptopersonaprofile.component';\nimport { RightclickserviceComponent } from './rightclickservice/rightclickservice.component';\n// import { PresentationCardComponent } from './presentation-card//presentation-card.component';\nconst routes: Routes = [\n  { path:'e',component:AdecptopersonaComponent},\n  { path:'ae',component:AdecptopersonaprofileComponent},\n  { path:'cd',component:RightclickserviceComponent }\n //{ path:'',component:PresentationCardComponent},\n  \n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<app-header></app-header>\n<router-outlet></router-outlet>\n\n  \n<app-footer></app-footer>","import {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule} from './material.module';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {AdecptopersonaprofileComponent} from './adecptopersonaprofile/adecptopersonaprofile.component';\nimport {AdecptopersonaComponent} from './adecptopersona/adecptopersona.component';\nimport {ProfilesearchComponent} from './profilesearch/profilesearch.component';\nimport {EscolaridadComponent} from './escolaridad/escolaridad.component';\nimport {ExperienciaComponent} from './experiencia/experiencia.component';\nimport {ConocriticosComponent} from './conocriticos/conocriticos.component'\nimport {ControlversionapppComponent} from './controlversionappp/controlversionappp.component';\nimport {AppconocriticosComponent} from './appconocriticos/appconocriticos.component';\nimport {AppcversionComponent} from './appcversion/appcversion.component';\nimport {AppexperienciaComponent} from './appexperiencia/appexperiencia.component';\nimport {AppescolaridadComponent} from './appescolaridad/appescolaridad.component';\nimport {ApprecomendComponent} from './apprecomend/apprecomend.component';\nimport {ApppresentationcardComponent} from './apppresentationcard/apppresentationcard.component';\nimport {AppnotacomentarioComponent} from './appnotacomentario/appnotacomentario.component';\nimport {AppuploadimageComponent} from './appuploadimage/appuploadimage.component';\nimport {AppinstrumentosComponent} from './appinstrumentos/appinstrumentos.component';\nimport {AppcasonegocioComponent} from './appcasonegocio/appcasonegocio.component';\nimport {ApptabsComponent} from './apptabs/apptabs.component';\nimport {ContextMenuModule } from 'ngx-contextmenu';\nimport {RightclickComponent } from './rightclick/rightclick.component';\nimport { RightclickserviceComponent} from  './rightclickservice/rightclickservice.component';\nimport {ReqtecnologicoComponent} from './reqtecnologico/reqtecnologico.component';\nimport {AppreqtecnologicoComponent} from './appreqtecnologico/appreqtecnologico.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,HeaderComponent,FooterComponent,AdecptopersonaprofileComponent,AdecptopersonaComponent,ProfilesearchComponent,EscolaridadComponent,ExperienciaComponent,ConocriticosComponent,ControlversionapppComponent\n  ,AppconocriticosComponent,AppcversionComponent,AppexperienciaComponent,AppescolaridadComponent,ApprecomendComponent,\n  ApppresentationcardComponent,AppnotacomentarioComponent,AppuploadimageComponent,AppinstrumentosComponent,AppcasonegocioComponent,ApptabsComponent\n  ,RightclickComponent,RightclickserviceComponent,ReqtecnologicoComponent,AppreqtecnologicoComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,MaterialModule,FormsModule,ReactiveFormsModule,ContextMenuModule.forRoot()\n    ]\n  ,\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\nexport interface CasoNegocio {\n  name: string;\n  position: number;\n  valoracion:number;\n}\nconst ELEMENT_DATA: CasoNegocio[] = [\n  {position: 1, name: 'PERSUADE',valoracion:2},\n  {position: 2, name: 'ADAPTABILIDAD SITUACIONAL',valoracion:2},\n  {position: 3, name: 'SABE MOVERSE EN REDES',valoracion:2},\n  {position: 4, name: 'AGILIDAD MENTAL',valoracion:2},\n  {position: 5, name: 'AGILIDAD INTERPERSONAL',valoracion:2},\n  {position: 6, name: 'AGILIDAD PARA EL CAMBIO',valoracion:2},\n  {position: 7, name: 'AGILIDAD CON LOS RESULTADOS',valoracion:2},\n  {position: 8, name: 'JERARQUIA',valoracion:2},\n  {position: 9, name: 'ESTATUS',valoracion:2},\n  {position: 10, name:'APRENDIZAJE',valoracion:2},\n];\n\n@Component({\n  selector: 'app-appcasonegocio',\n  templateUrl: './appcasonegocio.component.html',\n  styleUrls: ['./appcasonegocio.component.scss']\n})\nexport class AppcasonegocioComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n  displayedColumns: string[] = ['position', 'name','valoracion'];\n  dataSource = new MatTableDataSource<CasoNegocio>(ELEMENT_DATA);\n  \n\n}\n","\n    <table mat-table [dataSource]=\"dataSource\" class=\"example-container mat-elevation-z8\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n    \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Competencia </th>\n        <td mat-cell *matCellDef=\"let element\"> \n          <form class=\"example-form\">\n              <mat-form-field class=\"example-full-width\">\n                 <input matInput value=\"{{element.name}}\">\n              </mat-form-field>                 \n             \n            </form>\n                  \n      </td>\n      </ng-container>\n     <!-- Name Column -->\n     <ng-container matColumnDef=\"valoracion\">\n      <th mat-header-cell *matHeaderCellDef> valoración(1-5) </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        <form class=\"example-form\">\n          <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n            <mat-label>escala</mat-label>\n             <input   matInput value=\"{{element.valoracion}}\">\n          </mat-form-field>                 \n         \n        </form>\n              \n    </td>\n     </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">    </tr>\n  </table>\n \n\n\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ConocimientosCriticos {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: ConocimientosCriticos[] = [\n  {position: 1, name: 'a) Relación con Sindicatos',name2:''},\n  {position: 2, name: 'b) Seguridad e Higiene',name2:''},\n  {position: 3, name: 'c) Calidad',name2:''},\n  {position: 4, name: 'd) Loremp ipslus',name2:''},\n  {position: 5, name: 'e) xxxx xxxxx',name2:''},\n  \n];\n\n@Component({\n  selector: 'app-appconocriticos',\n  templateUrl: './appconocriticos.component.html',\n  styleUrls: ['./appconocriticos.component.scss']\n})\nexport class AppconocriticosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<ConocimientosCriticos>(ELEMENT_DATA);\n  selection = new SelectionModel<ConocimientosCriticos>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ConocimientosCriticos): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Conocimientos Técnicos </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n           <!-- Name Column -->\n           <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo conocimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appcversion',\n  templateUrl: './appcversion.component.html',\n  styleUrls: ['./appcversion.component.scss']\n})\nexport class AppcversionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  states: string[] = [\n    'Gte.R.H Octubre ', 'Gte.R.H Noviembre', 'Gte.R.H Reclutamiento Zona2', 'Gte.R.H Nutrissa', 'Gte.R.H Del fuerte', \n      ];\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"4em\">\n  <mat-grid-tile>\n    <!-- <mat-form-field appearance=\"fill\">\n      <mat-label>Nueva!</mat-label>\n      <select matNativeControl required>\n        <option value=\"Limpia\">Limpia</option>\n        <option value=\"Clonar\">Clona</option>       \n      </select>\n    </mat-form-field> -->\n  </mat-grid-tile>\n  <mat-grid-tile >\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Selecciona Proyecto</mat-label>\n      <mat-select>\n          <mat-option>None</mat-option>\n          <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\n      </mat-select>\n      </mat-form-field>\n  </mat-grid-tile>\n</mat-grid-list>\n<hr>","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Escolaridad {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: Escolaridad[] = [\n  {position: 1, name: 'Lic. Económico - Administrativo o Social  Titulado',name2:''},\n  {position: 2, name: 'Lic. Psicologia - Titulado',name2:''},\n  \n];\n@Component({\n  selector: 'app-appescolaridad',\n  templateUrl: './appescolaridad.component.html',\n  styleUrls: ['./appescolaridad.component.scss']\n})\nexport class AppescolaridadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = 'Clear me';\n  \n  // displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  \n  displayedColumns: string[] = ['select', 'position', 'name','name2','delete'];\n  dataSource = new MatTableDataSource<Escolaridad>(ELEMENT_DATA);\n  selection = new SelectionModel<Escolaridad>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Escolaridad): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n  \n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\" class=\"border-bottom-0\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0 \">No.</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Escolaridad </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          <!-- Name2 Column -->\n          <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <form class=\"example-form\">\n                  <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                    <mat-label>describe aqui</mat-label>\n                     <input   matInput value=\"{{element.name2}}\">\n                  </mat-form-field>                 \n                 \n                </form>\n                      \n          </td>\n          </ng-container>\n          <!-- GradosDom Column -->\n          <!-- <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\">Semáforo </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Cumple</mat-radio-button>\n                <mat-radio-button value=\"2\">No cumple</mat-radio-button>\n                <mat-radio-button value=\"3\">Revisión</mat-radio-button>              \n              </mat-radio-group>\n               \n                      \n          </td>\n          </ng-container> -->\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        \n        <!-- <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva </mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div> -->\n       \n    </mat-card-content>\n    <mat-card-actions>\n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Experiencia {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: Experiencia[] = [\n  {position: 1, name: '10 años de experiencia consolidada en Recursos Humanos como Generalista y/o Gerente.',name2:''},\n  {position: 2, name: 'Experiencia en plantas operativas y manejo de equipos de trabajo',name2:''},\n  {position: 3, name: 'Conocimiento en Relaciones Laborales',name2:''},\n  {position: 4, name: 'Conocimiento en Nómina',name2:''},\n  {position: 5, name: 'Conocimiento en Compensaciones',name2:''},\n];\n@Component({\n  selector: 'app-appexperiencia',\n  templateUrl: './appexperiencia.component.html',\n  styleUrls: ['./appexperiencia.component.scss']\n})\nexport class AppexperienciaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<Experiencia>(ELEMENT_DATA);\n  selection = new SelectionModel<Experiencia>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Experiencia): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Experiencia Crítica </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia  </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva experiencia</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appinstrumentos',\n  templateUrl: './appinstrumentos.component.html',\n  styleUrls: ['./appinstrumentos.component.scss']\n})\nexport class AppinstrumentosComponent implements OnInit {\n  checked:boolean;\n  modo=\"Seleccion\";\n  constructor() \n  { }\n  \n  ngOnInit(): void {   \n     }\n  \n  cambia()\n  {\n    debugger;\n    if (this.checked == undefined)\n    {\n      this.checked=true;\n      this.modo=\"Desarrollo\";\n      debugger;\n    } \n    else if (this.checked)\n    {\n     this.checked=false;\n      this.modo=\"Seleccion\";\n      debugger;\n    }\n    else if (this.checked==false)\n    {\n      this.checked=true;\n      this.modo=\"Desarrollo\";\n      debugger; \n    }\n  }\n  \n}\n","\n<mat-grid-list cols=5 class=\"myGridList\" rowHeight=\"fit\">\n    \n    <mat-grid-tile></mat-grid-tile>\n    <mat-grid-tile>      </mat-grid-tile>    \n      <mat-grid-tile>\n        <h3>Instrumentos-</h3><h4 class=\"textoColorPeople\">{{modo}}</h4>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"slide-title\"><p style=\"font-size: 0.9em;color:dimgray;\">Prender Desarrollo</p>&nbsp;\n        <mat-slide-toggle [(ngModel)]=\"checked\" (toggleChange)=\"cambia()\"></mat-slide-toggle>\n      </mat-grid-tile>\n      <mat-grid-tile></mat-grid-tile>\n</mat-grid-list>\n  \n  <!-- <mat-grid-list cols=6 class=\"myGridList\" rowHeight=\"fit\">\n    <mat-grid-tile></mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Psicometría</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\"  min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Entrevista C.</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Caso de Negocio</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>360ª</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile></mat-grid-tile>\n  </mat-grid-list>\n   -->\n  <hr>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appnotacomentario',\n  templateUrl: './appnotacomentario.component.html',\n  styleUrls: ['./appnotacomentario.component.scss']\n})\nexport class AppnotacomentarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n}\n","<hr>\n  <div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-md-2\"></div>\n     \n      <div class=\"col-md-8\">\n        <div class=\"card-body\">\n\n <p style=\"text-align: center;font-size: large;\" class=\"text-black-50\">Nota/Comentario</p>\n        \n          <form class=\"example-form\">\n            <mat-form-field class=\"example-full-width\">\n              <mat-label></mat-label>\n              <!-- <input matInput #message maxlength=\"1000\" placeholder=\"...\" [(ngModel)]=\"message.value\"> -->\n              <textarea matInput #message maxlength=\"1000\" name=\"message\" \n                [(ngModel)]=\"value\"></textarea>\n              <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                <mat-icon>close</mat-icon>\n              </button>\n              <mat-hint align=\"start\"><strong></strong> </mat-hint>\n              <mat-hint align=\"end\">{{message.value.length}} / 1000</mat-hint>\n            </mat-form-field>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-2\"></div>     \n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n\nexport interface Menu\n{\n  label:string\n}\n@Component({\n  selector: 'app-apppresentationcard',\n  templateUrl: './apppresentationcard.component.html',\n  styleUrls: ['./apppresentationcard.component.scss']\n})\nexport class ApppresentationcardComponent implements OnInit {\n\n  pricometria = new FormControl(16, Validators.min(10));\n\n  constructor() {};\n  data:Menu[]=[{label:'Reporte'}];\n  label=\"Reporte\";\n\n  ngOnInit(): void {\n  } \n\n}\n","  <div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-md-2\"></div>\n      <div class=\"col-md-2\">     \n        <img class=\"rounded-circle z-depth-2\" width=\"100rem\" height=\"100rem\" alt=\"100x100\" src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(31).jpg\"\n        data-holder-rendered=\"true\">\n      <app-appuploadimage></app-appuploadimage>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title texto-centro\" >Reporte de Valoración Integral </h2>\n          <p class=\"card-text texto-centro\"> Lidia V. <button mat-mini-fab>Editar</button></p>  \n          <p class=\"card-text text-secondary texto-centro\">Gerente de Rec.Y Sel.</p>\n        </div>\n      </div>\n      <div class=\"col-md-2\">\n        <p class=\"text-lg-right mb-3\">\n          <!-- <button mat-mini-fab color=\"warn\" onClick=\"window.open('https://drive.google.com/file/d/1OeLCeVdbI2azPpJ9D3uMM4FbAbKCwtaU/view?usp=sharing')\" aria-label=\"Example icon button with a filter list icon\">\n           Reporte Normal\n          </button><br>\n          <button mat-mini-fab color=\"warn\" onClick=\"window.open('https://drive.google.com/file/d/1OeLCeVdbI2azPpJ9D3uMM4FbAbKCwtaU/view?usp=sharing')\" aria-label=\"Example icon button with a filter list icon\">\n            Reporte con Ins3\n           </button> -->\n           <button mat-raised-button onClick=\"window.open('https://drive.google.com/file/d/1e0ZaUHN1Upa6YOFpJOXsEw0QB2k42rO8/view?usp=sharing')\">Descargar Reporte Normal</button><br>\n           <button mat-raised-button color=\"primary\" onClick=\"window.open('https://drive.google.com/file/d/1icR6dTiKcpsYdqWdX74MYSxXU0z7IkRh/view?usp=sharing')\">Descargar Con Instrum3</button>\n        </p>\n      </div>\n      <div class=\"col-md-2\">\n       \n\n\n      </div>     \n    </div>\n  </div>\n  <hr>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n@Component({\n  selector: 'app-apprecomend',\n  templateUrl: './apprecomend.component.html',\n  styleUrls: ['./apprecomend.component.scss']\n})\nexport class ApprecomendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  favoriteSeason: string;\n  seasons: string[] = ['Recomendable', 'Recomendable con reservas', 'No recomendable', 'No cubre el perfil'];\n}\n","\n<div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-md-2\"></div>\n\n    <div class=\"col-md-8\">\n      <div class=\"card-body\">\n\n        <p style=\"text-align: center;font-size: large;\" class=\"text-black-50\">Recomendación</p>\n\n        <label id=\"example-radio-group-label\"></label>\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n          [(ngModel)]=\"favoriteSeason\">\n          <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\n            {{season}}\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n</div>\n\n\n<div>\n    <!-- {{favoriteSeason}} -->\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ReqTecnologico {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: ReqTecnologico[] = [\n  {position: 1, name: 'a) Excel',name2:''},\n  {position: 2, name: 'b) ISO 9001:2015',name2:''},\n  \n];\n@Component({\n  selector: 'app-appreqtecnologico',\n  templateUrl: './appreqtecnologico.component.html',\n  styleUrls: ['./appreqtecnologico.component.scss']\n})\nexport class AppreqtecnologicoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<ReqTecnologico>(ELEMENT_DATA);\n  selection = new SelectionModel<ReqTecnologico>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ReqTecnologico): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Requerimiento Tecnológico</th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n           <!-- Name Column -->\n           <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo requerimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n@Component({\n  selector: 'app-apptabs',\n  templateUrl: './apptabs.component.html',\n  styleUrls: ['./apptabs.component.scss']\n})\nexport class ApptabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-tab-group animationDuration=\"2000ms\" mat-align-tabs=\"center\" [color]=\"'warn'\" [backgroundColor]=\"''\">\n    <mat-tab label=\"Experiencia\">\n        <app-appescolaridad></app-appescolaridad>\n        <app-appexperiencia></app-appexperiencia>\n        <app-appconocriticos></app-appconocriticos>\n        <app-appreqtecnologico></app-appreqtecnologico> \n        <app-apprecomend></app-apprecomend>\n        <app-appnotacomentario></app-appnotacomentario>\n    </mat-tab>\n    <mat-tab label=\"Instrumento 3\">\n       \n            <app-appcasonegocio></app-appcasonegocio>\n       \n    </mat-tab>\n   \n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appuploadimage',\n  templateUrl: './appuploadimage.component.html',\n  styleUrls: ['./appuploadimage.component.scss']\n})\nexport class AppuploadimageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"input-group mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Cargar</span>\n    </div>\n    <div class=\"custom-file\">\n      <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\n      <label class=\"custom-file-label\" for=\"inputGroupFile01\">Buscar imagen</label>\n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface ConocimientosCriticos {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: ConocimientosCriticos[] = [\n  {position: 1, name: 'a) Relación con Sindicatos'},\n  {position: 2, name: 'b) Seguridad e Higiene'},\n  {position: 3, name: 'c) Calidad'},\n  {position: 4, name: 'd) Loremp ipslus'},\n  {position: 5, name: 'e) xxxx xxxxx'},\n];\n\n@Component({\n  selector: 'app-conocriticos',\n  templateUrl: './conocriticos.component.html',\n  styleUrls: ['./conocriticos.component.scss']\n})\nexport class ConocriticosComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<ConocimientosCriticos>(ELEMENT_DATA);\n  selection = new SelectionModel<ConocimientosCriticos>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ConocimientosCriticos): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Conocimientos Técnicos</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo conocimiento </mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-controlversionappp',\n  templateUrl: './controlversionappp.component.html',\n  styleUrls: ['./controlversionappp.component.scss']\n})\nexport class ControlversionapppComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {       }\n  states: string[] = [\n    'Gte.R.H Octubre ', 'Gte.R.H Noviembre', 'Gte.R.H Reclutamiento Zona2', 'Gte.R.H Nutrissa', 'Gte.R.H Del fuerte',\n  ];\n}\n","       <div class=\"row\">\n           <div class=\"col-md-6 text-md-right\">\n            <mat-form-field appearance=\"fill\">\n            <mat-label>Selecciona Proyecto</mat-label>\n            <mat-select>\n                <mat-option>None</mat-option>\n                <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\n            </mat-select>\n            </mat-form-field>\n           </div>\n           <div class=\"col-md-6\">\n          \n            <!-- Example single danger button -->\n            <div ngbDropdown class=\"d-inline-block\">\n                <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Nuevo!</button>\n                <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                  <button ngbDropdownItem>Limpio</button>\n                  <button ngbDropdownItem>Clonar</button>                  \n                </div>\n              </div>\n       </div>  </div>  <hr>\n\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Escolaridad {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: Escolaridad[] = [\n  {position: 1, name: 'Lic. Económico - Administrativo o Social  Titulado'},\n  {position: 2, name: 'Lic. Psicologia - Titulado'},\n  \n];\n\n@Component({\n  selector: 'app-escolaridad',\n  templateUrl: './escolaridad.component.html',\n  styleUrls: ['./escolaridad.component.scss']\n})\nexport class EscolaridadComponent implements OnInit {\n  constructor() { }\n  ngOnInit(): void {  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<Escolaridad>(ELEMENT_DATA);\n  selection = new SelectionModel<Escolaridad>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Escolaridad): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Escolaridad</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva escolaridad</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n  \n\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface Experiencia {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: Experiencia[] = [\n  {position: 1, name: '10 años de experiencia consolidada en Recursos Humanos como Generalista y/o Gerente.'},\n  {position: 2, name: 'Experiencia en plantas operativas y manejo de equipos de trabajo'},\n  {position: 3, name: 'Conocimiento en Relaciones Laborales'},\n  {position: 4, name: 'Conocimiento en Nómina'},\n  {position: 5, name: 'Conocimiento en Compensaciones'},\n];\n\n@Component({\n  selector: 'app-experiencia',\n  templateUrl: './experiencia.component.html',\n  styleUrls: ['./experiencia.component.scss']\n})\nexport class ExperienciaComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<Experiencia>(ELEMENT_DATA);\n  selection = new SelectionModel<Experiencia>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Experiencia): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Experiencia Crítica</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva experiencia</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n<p class=\" text-center\" style=\"font-family: Arial; font-weight: normal; color: rgba(66, 64, 64, 0.6); font-size:0.9em\">© 2015 Todos los derechos reservados a &nbsp;\n<a id=\"footerimg\" href=\"http://peoplevalue.com.mx\" style=\"color:#2F61C5;font-family:Arial;font-size:0.9em;font-weight:bold;\">www.peoplevalue.com.mx</a>&nbsp;&nbsp;\n<img src=\"https://pvstc2.talentassessnet3d.com.mx/talent3d/administrador/images/PeopleValue-Azul14percent.png\"></p>\n        <span></span>\n</div>","import { Component, OnInit } from '@angular/core';\n//import {MatButtonModule} from '@angular/material/button'; \n//import {MatIconModule} from '@angular/material/icon';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <nav class=\"navbar sticky-top navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Sticky top</a>\n  </nav> -->\n\n\n  <nav class=\"nav\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"https://pvstc2.talentassessnet3d.com.mx/talent3d/administrador/images/Assessnet_blanco_sinletras20percent.png\"\n         width=\"auto\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\">\n         Talent3d\n    </a>\n    <ul class=\"nav__list\">\n        <li class=\"nav__item\">\n            <button mat-button [matMenuTriggerFor]=\"perfilamiento\">Perfilamiento</button>\n            <mat-menu #perfilamiento=\"matMenu\">\n              <button mat-menu-item [matMenuTriggerFor]=\"Competencias\">Competencias</button>\n              <button mat-menu-item [matMenuTriggerFor]=\"Tcaps\">Tcaps</button>\n              <button mat-menu-item [routerLink]=\"['ae']\">AdminExperiencia</button>\n            </mat-menu>\n            <mat-menu #Competencias=\"matMenu\">\n                <button mat-menu-item>Administrar</button>\n                <button mat-menu-item>Diccionario</button>\n            </mat-menu>\n              <mat-menu #Tcaps=\"matMenu\">\n                <button mat-menu-item>Administrar</button>\n                <button mat-menu-item>Diccionario</button>\n              </mat-menu>\n              \n        </li>\n        <li class=\"nav__item\">\n            <button mat-button [matMenuTriggerFor]=\"Administracion\">Administración</button>\n            <mat-menu #Administracion=\"matMenu\">\n                <button mat-menu-item>Registro</button>\n                <button mat-menu-item>Registro Masivo</button>\n                <button mat-menu-item>Seguimiento</button>\n                <button mat-menu-item [routerLink]=\"['e']\">Experiencia</button>\n            </mat-menu>\n\n        </li>\n        <li class=\"nav__item\">Seguridad</li>\n        <li class=\"nav__item\">\n            <button mat-fab color=\"primary\">Lidia</button>\n        </li>\n    </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    \n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms'; /*Para su funcionamiento en app.module agregaste:FormModule,Reactiveforms*/\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n@Component({\n  selector: 'app-profilesearch',\n  templateUrl: './profilesearch.component.html',\n  styleUrls: ['./profilesearch.component.scss']\n})\n\n  \nexport class ProfilesearchComponent implements OnInit {\n\n  \n  control = new FormControl();\n  streets: string[] = ['Gte.R.H', 'Director R.H', 'Reclutadora', 'Coordinadora de Rec.'];\n  filteredStreets: Observable<string[]>;\n\n\n  ngOnInit(): void \n  {\n    this.filteredStreets = this.control.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n  private _filter(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streets.filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n\n}\n","<mat-card>\n<div class=\"row\">\n  <div class=\"col-md-4\">\n \n  </div>\n<div class=\"col-md-8 text-md-left\">\n  <form class=\"example-form\">\n    <input type=\"text\"\n           placeholder=\"Busca un puesto\"\n           [formControl]=\"control\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let street of filteredStreets | async\" [value]=\"street\">\n        {{street}}\n      </mat-option>\n    </mat-autocomplete>\n  </form>   \n</div>\n\n</div>\n</mat-card>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ReqTecnologico {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: ReqTecnologico[] = [\n  {position: 1, name: 'a) Excel'},\n  {position: 2, name: 'b) ISO 9001:2015'},\n  \n];\n\n@Component({\n  selector: 'app-reqtecnologico',\n  templateUrl: './reqtecnologico.component.html',\n  styleUrls: ['./reqtecnologico.component.scss']\n})\nexport class ReqtecnologicoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<ReqTecnologico>(ELEMENT_DATA);\n  selection = new SelectionModel<ReqTecnologico>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ReqTecnologico): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Requerimiento Tecnológico</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo requerimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\n@Component({\n  selector: 'app-rightclick',\n  templateUrl: './rightclick.component.html',\n  styleUrls: ['./rightclick.component.scss']\n})\nexport class RightclickComponent implements OnInit {\n  @ViewChild('basicMenu') contextMenu: ContextMenuComponent;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  showMessage(message: any) {\n    console.log(message);\n  }\n  \n}\n","<context-menu #basicMenu>\n\t<ng-template contextMenuItem [subMenu]=\"subMenuMove\">\n\t\tMove\n\t</ng-template>\n\n  <ng-template contextMenuItem divider=\"true\"></ng-template>\n\n\t<context-menu #subMenuMove>\n\t\t<ng-template contextMenuItem>\n\t\t\tRight\n\t\t</ng-template>\n\t\t<ng-template contextMenuItem>\n\t\t\tLeft\n\t\t</ng-template>\n\t</context-menu>\n\t<ng-template contextMenuItem (execute)=\"showMessage('Hi, ' + $event.item.name)\">\n\t\tSay hi!\n\t</ng-template>\n\t<ng-template contextMenuItem divider=\"true\"></ng-template>\n\t<ng-template contextMenuItem let-item (execute)=\"showMessage($event.item.name + ' said: ' + $event.item.otherProperty)\">\n\t\tBye, {{item?.name}}\n\t</ng-template>\n\t<!-- <ng-template contextMenuItem passive=\"true\">\n    Input something: <input type=\"text\">\n  </ng-template> -->\n</context-menu>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ContextMenuComponent, ContextMenuService } from 'ngx-contextmenu';\nimport { RightclickComponent } from '../rightclick/rightclick.component';\n\n@Component({\n  selector: 'app-rightclickservice',\n  templateUrl: './rightclickservice.component.html',\n  styleUrls: ['./rightclickservice.component.scss']\n})\nexport class RightclickserviceComponent implements OnInit {\n\n  name = 'Angular';\n  public item = { name: 'John', otherProperty: 'Foo' };\n  @ViewChild(RightclickComponent) rightClick: RightclickComponent;\n\n  constructor(private contextMenuService: ContextMenuService) { }\n\n  public onContextMenu($event: MouseEvent, item: any): void {\n    this.contextMenuService.show.next({\n      contextMenu: this.rightClick.contextMenu,\n      event: $event,\n      item: item\n\n    });\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    Right click on someone's name:\n  </p>\n  <ul>\n      <li\n          (contextmenu)=\"onContextMenu($event, item)\"\n          >\n          <!-- [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"item\" -->\n        {{item?.name}}\n        </li>\n  </ul>\n  \n  <app-rightclick><app-rightclick>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}