{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/adecptopersona/adecptopersona.component.ts","webpack:///src/app/adecptopersona/adecptopersona.component.html","webpack:///src/app/adecptopersonaprofile/adecptopersonaprofile.component.ts","webpack:///src/app/adecptopersonaprofile/adecptopersonaprofile.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appcasonegocio/appcasonegocio.component.ts","webpack:///src/app/appcasonegocio/appcasonegocio.component.html","webpack:///src/app/appconocriticos/appconocriticos.component.ts","webpack:///src/app/appconocriticos/appconocriticos.component.html","webpack:///src/app/appcversion/appcversion.component.ts","webpack:///src/app/appcversion/appcversion.component.html","webpack:///src/app/appescolaridad/appescolaridad.component.ts","webpack:///src/app/appescolaridad/appescolaridad.component.html","webpack:///src/app/appexperiencia/appexperiencia.component.ts","webpack:///src/app/appexperiencia/appexperiencia.component.html","webpack:///src/app/appinstrumentos/appinstrumentos.component.ts","webpack:///src/app/appinstrumentos/appinstrumentos.component.html","webpack:///src/app/appnotacomentario/appnotacomentario.component.ts","webpack:///src/app/appnotacomentario/appnotacomentario.component.html","webpack:///src/app/apppresentationcard/apppresentationcard.component.ts","webpack:///src/app/apppresentationcard/apppresentationcard.component.html","webpack:///src/app/apprecomend/apprecomend.component.ts","webpack:///src/app/apprecomend/apprecomend.component.html","webpack:///src/app/appreqtecnologico/appreqtecnologico.component.ts","webpack:///src/app/appreqtecnologico/appreqtecnologico.component.html","webpack:///src/app/apptabs/apptabs.component.ts","webpack:///src/app/apptabs/apptabs.component.html","webpack:///src/app/appuploadimage/appuploadimage.component.ts","webpack:///src/app/appuploadimage/appuploadimage.component.html","webpack:///src/app/conocriticos/conocriticos.component.ts","webpack:///src/app/conocriticos/conocriticos.component.html","webpack:///src/app/controlversionappp/controlversionappp.component.ts","webpack:///src/app/controlversionappp/controlversionappp.component.html","webpack:///src/app/escolaridad/escolaridad.component.ts","webpack:///src/app/escolaridad/escolaridad.component.html","webpack:///src/app/experiencia/experiencia.component.ts","webpack:///src/app/experiencia/experiencia.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/profilesearch/profilesearch.component.ts","webpack:///src/app/profilesearch/profilesearch.component.html","webpack:///src/app/reqtecnologico/reqtecnologico.component.ts","webpack:///src/app/reqtecnologico/reqtecnologico.component.html","webpack:///src/app/rightclick/rightclick.component.ts","webpack:///src/app/rightclick/rightclick.component.html","webpack:///src/app/rightclickservice/rightclickservice.component.ts","webpack:///src/app/rightclickservice/rightclickservice.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdecptopersonaComponent","selector","templateUrl","styleUrls","AdecptopersonaprofileComponent","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","ELEMENT_DATA","position","name","valoracion","AppcasonegocioComponent","displayedColumns","dataSource","$event","stopPropagation","selection","name2","AppconocriticosComponent","value","numSelected","selected","length","numRows","data","isAllSelected","clear","forEach","row","select","isSelected","AppcversionComponent","states","AppescolaridadComponent","AppexperienciaComponent","AppinstrumentosComponent","modo","checked","undefined","cambia","AppnotacomentarioComponent","ApppresentationcardComponent","pricometria","min","label","ApprecomendComponent","seasons","AppreqtecnologicoComponent","ApptabsComponent","AppuploadimageComponent","ConocriticosComponent","ControlversionapppComponent","EscolaridadComponent","ExperienciaComponent","FooterComponent","HeaderComponent","MaterialModule","ProfilesearchComponent","control","streets","filteredStreets","valueChanges","pipe","_filter","filterValue","_normalizeValue","filter","street","includes","toLowerCase","replace","ReqtecnologicoComponent","RightclickComponent","message","console","log","showMessage","item","otherProperty","RightclickserviceComponent","contextMenuService","show","next","contextMenu","rightClick","event","preventDefault","onContextMenu","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,uB;;;;;;;mCAGH,CACN;;;;;;;uBAJSA,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPpC;;AAEA;;AAEA;;;;;;;;;sEDGaA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTC,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,8B;AAEX,gDAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,8B;AAA8B,K;;;YAA9BA,8B;AAA8B,gD;AAAA,c;AAAA,a;AAAA;AAAA;ACP3C;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;sEDEaA,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTH,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;AEP3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CAKA;;;AACA,QAAME,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAC,GAAP;AAAWC,eAAS,EAAC;AAArB,KADqB,EAErB;AAAED,UAAI,EAAC,IAAP;AAAYC,eAAS,EAAC;AAAtB,KAFqB,EAGrB;AAAED,UAAI,EAAC,IAAP;AAAYC,eAAS,EAAC;AAAtB,KAHqB,CAItB;AAJsB,KAAvB;;QAWaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERP,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACCzB;;AACA;;AAGA;;;;;;;;;sEDLaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTV,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzmDaU,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,4FAJO,EAIiB,+DAJjB,EAIgC,0DAJhC,EAI4C,kEAJ5C,EAIgE,mEAAkBJ,OAAlB,EAJhE,CAOI;;;;0HAGFI,S,EAAS;AAAA,uBAdlB,2DAckB,EAdL,wEAcK,EAdW,wEAcX,EAd2B,sHAc3B,EAd0D,iGAc1D,EAdkF,8FAclF,EAdyG,wFAczG,EAd8H,wFAc9H,EAdmJ,2FAcnJ,EAdyK,6GAczK,EAbnB,oGAamB,EAbM,wFAaN,EAb2B,iGAa3B,EAbmD,iGAanD,EAb2E,wFAa3E,EAZpB,gHAYoB,EAZS,0GAYT,EAZoC,iGAYpC,EAZ4D,oGAY5D,EAZqF,iGAYrF,EAZ6G,4EAY7G,EAXnB,qFAWmB,EAXC,0GAWD,EAX4B,iGAW5B,EAXoD,0GAWpD;AAX8E,kBAEhG,uEAFgG,EAGhG,oEAHgG,EAIhG,oEAJgG,EAKhG,4FALgG,EAKxE,+DALwE,EAKzD,0DALyD,EAK7C,kEAL6C,EAK1B,kEAL0B;AAW9E,O;AANoD,K;;;;;sEAM7DA,S,EAAS;cAhBrB,sDAgBqB;eAhBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EACC,wEADD,EACiB,wEADjB,EACiC,sHADjC,EACgE,iGADhE,EACwF,8FADxF,EAC+G,wFAD/G,EACoI,wFADpI,EACyJ,2FADzJ,EAC+K,6GAD/K,EAEb,oGAFa,EAEY,wFAFZ,EAEiC,iGAFjC,EAEyD,iGAFzD,EAEiF,wFAFjF,EAGd,gHAHc,EAGe,0GAHf,EAG0C,iGAH1C,EAGkE,oGAHlE,EAG2F,iGAH3F,EAGmH,4EAHnH,EAIb,qFAJa,EAIO,0GAJP,EAIkC,iGAJlC,EAI0D,0GAJ1D,CADN;AAMRJ,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,4FAJO,EAIiB,+DAJjB,EAIgC,0DAJhC,EAI4C,kEAJ5C,EAIgE,mEAAkBD,OAAlB,EAJhE,CAND;AAaRM,mBAAS,EAAE,EAbH;AAcRC,mBAAS,EAAE,CAAC,2DAAD;AAdH,S;AAgBY,Q;;;;;;;;;;;;;;;;;;ACnDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIQ;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAY;;;;;;AACnD;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAS3B;;AAAuC;;AAAgB;;;;;;AACvD;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AAChB;;AACH;;AAEF;;AAEJ;;;;;;AAL2B;;AAAA;;;;;;AAQzB;;;;;;AACA;;;;AD7BN,QAAMC,YAAY,GAAkB,CAClC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,UAApB;AAA+BC,gBAAU,EAAC;AAA1C,KADkC,EAElC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,2BAApB;AAAgDC,gBAAU,EAAC;AAA3D,KAFkC,EAGlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,uBAApB;AAA4CC,gBAAU,EAAC;AAAvD,KAHkC,EAIlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,iBAApB;AAAsCC,gBAAU,EAAC;AAAjD,KAJkC,EAKlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,wBAApB;AAA6CC,gBAAU,EAAC;AAAxD,KALkC,EAMlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,yBAApB;AAA8CC,gBAAU,EAAC;AAAzD,KANkC,EAOlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,6BAApB;AAAkDC,gBAAU,EAAC;AAA7D,KAPkC,EAQlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,WAApB;AAAgCC,gBAAU,EAAC;AAA3C,KARkC,EASlC;AAACF,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,SAApB;AAA8BC,gBAAU,EAAC;AAAzC,KATkC,EAUlC;AAACF,cAAQ,EAAE,EAAX;AAAeC,UAAI,EAAC,aAApB;AAAkCC,gBAAU,EAAC;AAA7C,KAVkC,CAApC;;QAkBaC,uB;AAEX,yCAAc;AAAA;;AAEd,aAAAC,gBAAA,GAA6B,CAAC,UAAD,EAAa,MAAb,EAAoB,YAApB,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoCN,YAApC,CAAb;AAHiB;;;;mCACT,CAAa;;;;;;;uBAHVI,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,a;AAAA,imB;AAAA;AAAA;ACzBhC;;AAEE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAED;;AACC;;AACA;;AAUD;;AAEC;;AACA;;AACJ;;;;AArCmB;;AAmCI;;AAAA,4GAAgD,uBAAhD,EAAgD,IAAhD;;AACP;;AAAA;;;;;;;;;sEDXLA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTpB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AE1BpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAuB;;;;;;AAC9D;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAS3B;;AAAuC;;AAAU;;;;;;AACjD;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACvB;;AACH;;AAEF;;AAEJ;;;;;;AAL2B;;AAAA;;;;;;AASzB;;AAA6D;;AAAc;;;;;;AAC3E;;AACE;;AACE;;AAA4D;;AAAU;;AACtE;;AAA4B;;AAAQ;;AAEtC;;AAGJ;;;;;;AAII;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;ADhFZ,QAAMT,YAAY,GAA4B,CAC5C;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,4BAApB;AAAiDQ,WAAK,EAAC;AAAvD,KAD4C,EAE5C;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,wBAApB;AAA6CQ,WAAK,EAAC;AAAnD,KAF4C,EAG5C;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,YAApB;AAAiCQ,WAAK,EAAC;AAAvC,KAH4C,EAI5C;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,kBAApB;AAAuCQ,WAAK,EAAC;AAA7C,KAJ4C,EAK5C;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,eAApB;AAAoCQ,WAAK,EAAC;AAA1C,KAL4C,CAA9C;;QAcaC,wB;AAEX,0CAAc;AAAA;;AAId,aAAAC,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,OAA9B,EAAsC,OAAtC,EAA8C,QAA9C,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAA8CN,YAA9C,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAA0C,IAA1C,EAAgD,EAAhD,CAAZ;AARiB;;;;mCAET,CACP;AAOD;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,KAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAA2B;AACvC,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAhCUU,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,0C;AAAA,e;AAAA,a;AAAA,2xC;AAAA;AAAA;ACvBrC;;AACI;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAED;;AACC;;AACA;;AAUD;;AAED;;AACE;;AACA;;AASF;;AAEE;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AAUH;;AAKA;;AAEJ;;AACA;;AAKF;;;;AA/GuB;;AAAA;;AA8EM;;AAAA;;AACP;;AAAA;;;;;;;;;sEDhEXA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT3B,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;AEvBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeU;;AAAyD;;AAAS;;;;;;AAAzB;;AAAgB;;AAAA;;;;QDRtDsC,oB;AAEX,sCAAc;AAAA;;AAId,aAAAC,MAAA,GAAmB,CACjB,kBADiB,EACG,mBADH,EACwB,6BADxB,EACuD,kBADvD,EAC2E,oBAD3E,CAAnB;AAJiB;;;;mCAET,CACP;;;;;;;uBALUD,oB;AAAoB,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,4H;AAAA;AAAA;ACPjC;;AACE;;AASA;;AACE;;AACE;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAY;;AAAI;;AAChB;;AACJ;;AACA;;AACJ;;AACF;;AACA;;;;AALsB;;AAAA;;;;;;;;;sEDRTA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTxC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAA6D;;AAAG;;;;;;AAChE;;AAA8E;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAK9E;;AAA6D;;AAAY;;;;;;AACzE;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAS3B;;AAA6D;;AAAU;;;;;;AACvE;;AACE;;AACI;;AACE;;AAAW;;AAAa;;AACvB;;AACH;;AAEF;;AAEN;;;;;;AAL6B;;AAAA;;;;;;AAsBzB;;AAA6D;;AAAO;;;;;;AACpE;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;ADhFZ,QAAMT,YAAY,GAAkB,CAClC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,oDAApB;AAAyEQ,WAAK,EAAC;AAA/E,KADkC,EAElC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,4BAApB;AAAiDQ,WAAK,EAAC;AAAvD,KAFkC,CAApC;;QAUagB,uB;AAEX,yCAAc;AAAA;;AAId,aAAAd,KAAA,GAAQ,UAAR,CAJc,CAMd;;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,OAA9B,EAAsC,QAAtC,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoCN,YAApC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAgC,IAAhC,EAAsC,EAAtC,CAAZ;AAViB;;;;mCAET,CACP;AASD;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAiB;AAC7B,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAlCUyB,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,a;AAAA,wvC;AAAA;AAAA;ACnBpC;;AACI;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAEF;;AACE;;AACA;;AAUF;;AAeE;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AAuBN;;AACA;;AAEF;;;;AA5GuB;;AAAA;;AA8EM;;AAAA;;AACP;;AAAA;;;;;;;;;sEDpEXA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT1C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AEnBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAoB;;;;;;AAC3D;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAS3B;;AAAuC;;AAAW;;;;;;AAClD;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACvB;;AACH;;AAEF;;AAEJ;;;;;;AAL2B;;AAAA;;;;;;AASzB;;AAA6D;;AAAc;;;;;;AAC3E;;AACE;;AACE;;AAA4D;;AAAU;;AACtE;;AAA4B;;AAAQ;;AAEtC;;AAGJ;;;;;;AAII;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;ADhFZ,QAAMT,YAAY,GAAkB,CAClC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,sFAApB;AAA2GQ,WAAK,EAAC;AAAjH,KADkC,EAElC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,kEAApB;AAAuFQ,WAAK,EAAC;AAA7F,KAFkC,EAGlC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,sCAApB;AAA2DQ,WAAK,EAAC;AAAjE,KAHkC,EAIlC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,wBAApB;AAA6CQ,WAAK,EAAC;AAAnD,KAJkC,EAKlC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,gCAApB;AAAqDQ,WAAK,EAAC;AAA3D,KALkC,CAApC;;QAYaiB,uB;AAEX,yCAAc;AAAA;;AAKd,aAAAf,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,OAA9B,EAAsC,OAAtC,EAA8C,QAA9C,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoCN,YAApC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAgC,IAAhC,EAAsC,EAAtC,CAAZ;AATiB;;;;mCAET,CACP;AAQD;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAiB;AAC7B,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAjCU0B,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,a;AAAA,2xC;AAAA;AAAA;ACrBpC;;AACI;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAEF;;AACE;;AACA;;AAUD;;AAED;;AACE;;AACA;;AASF;;AAEE;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AAUH;;AAKA;;AAEJ;;AACA;;AAKF;;;;AA/GuB;;AAAA;;AA8EM;;AAAA;;AACP;;AAAA;;;;;;;;;sEDlEXA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT3C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AErBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0C,wB;AAGX,0CAAc;AAAA;;AADd,aAAAC,IAAA,GAAK,WAAL;AAEG;;;;mCAEK,CACJ;;;iCAEE;AAEJ;;AACA,cAAI,KAAKC,OAAL,IAAgBC,SAApB,EACA;AACE,iBAAKD,OAAL,GAAa,IAAb;AACA,iBAAKD,IAAL,GAAU,YAAV;AACA;AACD,WALD,MAMK,IAAI,KAAKC,OAAT,EACL;AACC,iBAAKA,OAAL,GAAa,KAAb;AACC,iBAAKD,IAAL,GAAU,WAAV;AACA;AACD,WALI,MAMA,IAAI,KAAKC,OAAL,IAAc,KAAlB,EACL;AACE,iBAAKA,OAAL,GAAa,IAAb;AACA,iBAAKD,IAAL,GAAU,YAAV;AACA;AACD;AACF;;;;;;;uBA9BUD,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,0C;AAAA,e;AAAA,a;AAAA,+M;AAAA;AAAA;ACNrC;;AAEI;;AACA;;AACE;;AACE;;AAAI;;AAAa;;AAAK;;AAA6B;;AAAQ;;AAC7D;;AACA;;AAAmC;;AAA2C;;AAAkB;;AAAI;;AAClG;;AAAkB;AAAA;AAAA,aAAqB,cAArB,EAAqB;AAAA,mBAAiB,IAAAI,MAAA,EAAjB;AAAyB,WAA9C;;AAAgD;;AACpE;;AACA;;AACN;;AAmCE;;;;AAzCyD;;AAAA;;AAGjC;;AAAA;;;;;;;;;sEDFbJ,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT5C,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBc;;AAA8E;AAAA;;AAAA;;AAAA,gCAAe,EAAf;AAAiB,SAAjB;;AAC5E;;AAAU;;AAAK;;AACjB;;;;QDXD+C,0B;AAEX,4CAAc;AAAA;;AAId,aAAArB,KAAA,GAAQ,EAAR;AAJiB;;;;mCAET,CACP;;;;;;;uBALUqB,0B;AAA0B,K;;;YAA1BA,0B;AAA0B,4C;AAAA,e;AAAA,a;AAAA,0mB;AAAA;AAAA;ACPvC;;AACE;;AACE;;AACE;;AAEA;;AACE;;AAEP;;AAAsE;;AAAe;;AAE5E;;AACE;;AACE;;AAEA;;AACE;AAAA;AAAA;;AAAoB;;AACtB;;AAGA;;AAAwB;;AAAkB;;AAC1C;;AAAsB;;AAA+B;;AACvD;;AACF;;AACF;;AACF;;AACA;;AACF;;AACF;;;;;;AAZc;;AAAA;;AACiB;;AAAA;;AAIG;;AAAA;;;;;;;;;sEDbvBA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTjD,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;AEPvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaagD,4B;AAIX,8CAAc;AAAA;;AAFd,aAAAC,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,GAAX,CAAe,EAAf,CAApB,CAAd;AAGA,aAAAnB,IAAA,GAAY,CAAC;AAACoB,eAAK,EAAC;AAAP,SAAD,CAAZ;AACA,aAAAA,KAAA,GAAM,SAAN;AAFgB;;;;mCAIR,CACP;;;;;;;uBATUH,4B;AAA4B,K;;;YAA5BA,4B;AAA4B,8C;AAAA,e;AAAA,a;AAAA,kzB;AAAA;AAAA;ACbvC;;AACE;;AACE;;AACA;;AACE;;AAEF;;AACA;;AACA;;AACE;;AACE;;AAAqC;;AAA+B;;AACpE;;AAAmC;;AAAS;;AAAqB;;AAAM;;AAAS;;AAChF;;AAAiD;;AAAqB;;AACxE;;AACF;;AACA;;AACE;;AAOG;;AAAsI;;AAAwB;;AAAS;;AACvK;;AAAsJ;;AAAsB;;AAC/K;;AACF;;AACA;;AAKF;;AACF;;AACA;;;;;;;;;sEDrBWA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTlD,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;AEbzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaU;;AACE;;AACF;;;;;;AAF8E;;AAC5E;;AAAA;;;;QDLCoD,oB;AAEX,sCAAc;AAAA;;AAKd,aAAAC,OAAA,GAAoB,CAAC,cAAD,EAAiB,2BAAjB,EAA8C,iBAA9C,EAAiE,oBAAjE,CAApB;AALiB;;;;mCAET,CACP;;;;;;;uBALUD,oB;AAAoB,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,ge;AAAA;AAAA;ACRjC;;AACE;;AACE;;AAEA;;AACE;;AAEE;;AAAsE;;AAAa;;AAEnF;;AACA;;AACE;AAAA;AAAA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACF;;AACF;;AAGA;;;;AAZU;;AAAA;;AAC+C;;AAAA;;;;;;;;;sEDJ5CA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTtD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAyB;;;;;;AAChE;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAS3B;;AAAuC;;AAAU;;;;;;AACjD;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACvB;;AACH;;AAEF;;AAEJ;;;;;;AAL2B;;AAAA;;;;;;AASzB;;AAA6D;;AAAc;;;;;;AAC3E;;AACE;;AACE;;AAA4D;;AAAU;;AACtE;;AAA4B;;AAAQ;;AAEtC;;AAGJ;;;;;;AAII;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;ADhFZ,QAAMT,YAAY,GAAqB,CACrC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,UAApB;AAA+BQ,WAAK,EAAC;AAArC,KADqC,EAErC;AAACT,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE,kBAApB;AAAuCQ,WAAK,EAAC;AAA7C,KAFqC,CAAvC;;QAUa8B,0B;AAEX,4CAAc;AAAA;;AAId,aAAA5B,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,OAA9B,EAAsC,OAAtC,EAA8C,QAA9C,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuCN,YAAvC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAmC,IAAnC,EAAyC,EAAzC,CAAZ;AARiB;;;;mCAET,CACP;AAOD;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAoB;AAChC,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAhCUuC,0B;AAA0B,K;;;YAA1BA,0B;AAA0B,4C;AAAA,e;AAAA,a;AAAA,2xC;AAAA;AAAA;ACnBvC;;AACI;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAED;;AACC;;AACA;;AAUD;;AAED;;AACE;;AACA;;AASF;;AAEE;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AAUH;;AAKA;;AAEJ;;AACA;;AAKF;;;;AA/GuB;;AAAA;;AA8EM;;AAAA;;AACP;;AAAA;;;;;;;;;sEDpEXA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTxD,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;AEnBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauD,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,gK;AAAA;AAAA;ACP7B;;AACI;;AACI;;AACA;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACA;;AAEQ;;AAER;;AAEJ;;;;AAfkE,oFAAgB,iBAAhB,EAAgB,EAAhB;;;;;;;;;sEDOrDA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTzD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawD,uB;AAEX,yCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,c;AAAA,a;AAAA,wT;AAAA;AAAA;ACPpC;;AACI;;AACE;;AAA0D;;AAAM;;AAClE;;AACA;;AACE;;AACA;;AAAwD;;AAAa;;AACvE;;AACF;;;;;;;;sEDDWA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT1D,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAUzB;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;;;;;AAWI;;AAA8E;AAAA;;AAAA;;AAAA,iCAAe,EAAf;AAAiB,SAAjB;;AAC5E;;AAAU;;AAAK;;AACjB;;;;ADlEhB,QAAMT,YAAY,GAA4B,CAC5C;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAD4C,EAE5C;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAF4C,EAG5C;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAH4C,EAI5C;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAJ4C,EAK5C;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAL4C,CAA9C;;QAaayC,qB;AAEX,uCAAc;AAAA;;AAEd,aAAA/B,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,QAA9B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAA8CN,YAA9C,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAA0C,IAA1C,EAAgD,EAAhD,CAAZ;AANiB;;;;mCACT,CAAa;AAOrB;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAA2B;AACvC,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBA9BU0C,qB;AAAqB,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,a;AAAA,ivC;AAAA;AAAA;ACvBlC;;AACI;;AACE;;AACA;;AAAgB;;AAAsB;;AACtC;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AACC;;AACI;;AAAW;;AAAmB;;AAC9B;;AAA4B;AAAA;AAAA;;AAA5B;;AACA;;AAGF;;AAEN;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AACpB;;AACN;;AACA;;AAEJ;;AACA;;AAKF;;;;AArFuB;;AAAA;;AAoDM;;AAAA;;AACP;;AAAA;;AAYoB;;AAAA;;AACT;;AAAA;;;;;;;;;sEDnDtBA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT3D,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEvBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMgB;;AAAyD;;AAAS;;;;;;AAAzB;;AAAgB;;AAAA;;;;QDC5D0D,2B;AAEX,6CAAc;AAAA;;AAEd,aAAAnB,MAAA,GAAmB,CACjB,kBADiB,EACG,mBADH,EACwB,6BADxB,EACuD,kBADvD,EAC2E,oBAD3E,CAAnB;AAFiB;;;;mCACT,CAAkB;;;;;;;uBAHfmB,2B;AAA2B,K;;;YAA3BA,2B;AAA2B,6C;AAAA,e;AAAA,a;AAAA,6W;AAAA;AAAA;ACPjC;;AACI;;AACC;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAY;;AAAI;;AAChB;;AACJ;;AACA;;AACD;;AACA;;AAGC;;AACI;;AAA8E;;AAAM;;AACpF;;AACE;;AAAwB;;AAAM;;AAC9B;;AAAwB;;AAAM;;AAChC;;AACF;;AACP;;AAAQ;;AAAQ;;;;AAdK;;AAAA;;;;;;;;;sEDCfA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACT5D,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;AEPxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAUzB;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;;;;;AAWI;;AAA8E;AAAA;;AAAA;;AAAA,iCAAe,EAAf;AAAiB,SAAjB;;AAC5E;;AAAU;;AAAK;;AACjB;;;;ADnEhB,QAAMT,YAAY,GAAkB,CAClC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KADkC,EAElC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAFkC,CAApC;;QAWa2C,oB;AACX,sCAAc;AAAA;;AAEd,aAAAjC,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,QAA9B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoCN,YAApC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAgC,IAAhC,EAAsC,EAAtC,CAAZ;AANiB;;;;mCACT,CAAa;AAOrB;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAiB;AAC7B,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBA7BU4C,oB;AAAoB,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,ivC;AAAA;AAAA;ACpBjC;;AACI;;AACE;;AACA;;AAAgB;;AAAW;;AAC3B;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AACC;;AACI;;AAAW;;AAAiB;;AAC5B;;AAA4B;AAAA;AAAA;;AAA5B;;AACA;;AAGF;;AAEN;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AACpB;;AACN;;AACA;;AAEJ;;AACA;;AAKF;;;;AArFuB;;AAAA;;AAoDM;;AAAA;;AACP;;AAAA;;AAYoB;;AAAA;;AACT;;AAAA;;;;;;;;;sEDtDtBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT7D,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEpBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAUzB;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;;;;;AAWI;;AAA8E;AAAA;;AAAA;;AAAA,iCAAe,EAAf;AAAiB,SAAjB;;AAC5E;;AAAU;;AAAK;;AACjB;;;;ADlEhB,QAAMT,YAAY,GAAkB,CAClC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KADkC,EAElC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAFkC,EAGlC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAHkC,EAIlC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAJkC,EAKlC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KALkC,CAApC;;QAaa4C,oB;AAEX,sCAAc;AAAA;;AAGd,aAAAlC,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,QAA9B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoCN,YAApC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAgC,IAAhC,EAAsC,EAAtC,CAAZ;AAPiB;;;;mCACT,CAAa;AAQrB;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAiB;AAC7B,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBA/BU6C,oB;AAAoB,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,ivC;AAAA;AAAA;ACvBjC;;AACI;;AACE;;AACA;;AAAgB;;AAAmB;;AACnC;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AACC;;AACI;;AAAW;;AAAiB;;AAC5B;;AAA4B;AAAA;AAAA;;AAA5B;;AACA;;AAGF;;AAEN;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AACpB;;AACN;;AACA;;AAEJ;;AACA;;AAKF;;;;AArFuB;;AAAA;;AAoDM;;AAAA;;AACP;;AAAA;;AAYoB;;AAAA;;AACT;;AAAA;;;;;;;;;sEDnDtBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9D,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEvBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6D,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,oZ;AAAA;AAAA;ACP5B;;AACA;;AAAuH;;AACvH;;AAA6H;;AAAsB;;AAAI;;AACvJ;;AAFA;;AAGQ;;AACR;;;;;;;;sEDEaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/D,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;OACA;AACA;;;QAMa8D,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,0mB;AAAA;AAAA;ACH1B;;AACE;;AACI;;AAEC;;AACL;;AACA;;AACI;;AACI;;AAAuD;;AAAa;;AACpE;;AACE;;AAAyD;;AAAY;;AACrE;;AAAkD;;AAAK;;AACvD;;AAA4C;;AAAgB;;AAC9D;;AACA;;AACI;;AAAsB;;AAAW;;AACjC;;AAAsB;;AAAW;;AACrC;;AACE;;AACE;;AAAsB;;AAAW;;AACjC;;AAAsB;;AAAW;;AACnC;;AAEN;;AACA;;AACI;;AAAwD;;AAAc;;AACtE;;AACI;;AAAsB;;AAAQ;;AAC9B;;AAAsB;;AAAe;;AACrC;;AAAsB;;AAAW;;AACjC;;AAA2C;;AAAW;;AAC1D;;AAEJ;;AACA;;AAAsB;;AAAS;;AAC/B;;AACI;;AAAgC;;AAAK;;AACzC;;AACJ;;AACJ;;;;;;;;;;;;AA/B+B;;AAAA;;AAEK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAaL;;AAAA;;AAKO;;AAAA;;;;;;;;;sED3BzBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACThE,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqGa+D,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAnDhB,CACP,4DADO,CAmDgB,EA9CvB,4DA8CuB,EA7CvB,sEA6CuB,EA5CvB,qEA4CuB,EA3CvB,iEA2CuB,EA1CvB,+DA0CuB,EAzCvB,qEAyCuB,EAxCvB,qFAwCuB,EAvCvB,uEAuCuB,EAtCvB,oFAsCuB,EArCvB,yEAqCuB,EApCvB,sFAoCuB,EAnCvB,qEAmCuB,EAlCvB,6EAkCuB,EAjCvB,uEAiCuB,EAhCvB,2EAgCuB,EA/BvB,iFA+BuB,EA9BvB,yEA8BuB,EA7BvB,2EA6BuB,EA5BvB,+EA4BuB,EA3BvB,8EA2BuB,EA1BvB,qEA0BuB,EAzBvB,uEAyBuB,EAxBvB,qEAwBuB,EAvBvB,qEAuBuB,EAtBvB,2EAsBuB,EArBvB,+EAqBuB,EApBvB,oFAoBuB,EAnBvB,4FAmBuB,EAlBvB,uEAkBuB,EAjBvB,uEAiBuB,EAhBvB,yEAgBuB,EAfvB,2EAeuB,EAdvB,yEAcuB,EAbvB,oFAauB,EAZvB,8EAYuB,EAXvB,qEAWuB,EAVvB,uEAUuB,EATvB,qEASuB,EARvB,2EAQuB,EAPvB,2EAOuB,EANvB,qEAMuB,EALvB,mEAKuB,EAJvB,gEAIuB,EAHvB,sEAGuB;;;;0HAAdA,c,EAAc;AAAA,kBAlDvB,4DAkDuB;AAlDX,kBAIZ,4DAJY,EAKZ,sEALY,EAMZ,qEANY,EAOZ,iEAPY,EAQZ,+DARY,EASZ,qEATY,EAUZ,qFAVY,EAWZ,uEAXY,EAYZ,oFAZY,EAaZ,yEAbY,EAcZ,sFAdY,EAeZ,qEAfY,EAgBZ,6EAhBY,EAiBZ,uEAjBY,EAkBZ,2EAlBY,EAmBZ,iFAnBY,EAoBZ,yEApBY,EAqBZ,2EArBY,EAsBZ,+EAtBY,EAuBZ,8EAvBY,EAwBZ,qEAxBY,EAyBZ,uEAzBY,EA0BZ,qEA1BY,EA2BZ,qEA3BY,EA4BZ,2EA5BY,EA6BZ,+EA7BY,EA8BZ,oFA9BY,EA+BZ,4FA/BY,EAgCZ,uEAhCY,EAiCZ,uEAjCY,EAkCZ,yEAlCY,EAmCZ,2EAnCY,EAoCZ,yEApCY,EAqCZ,oFArCY,EAsCZ,8EAtCY,EAuCZ,qEAvCY,EAwCZ,uEAxCY,EAyCZ,qEAzCY,EA0CZ,2EA1CY,EA2CZ,2EA3CY,EA4CZ,qEA5CY,EA6CZ,mEA7CY,EA8CZ,gEA9CY,EA+CZ,sEA/CY;AAkDW,O;AAHR,K;;;;;sEAGNA,c,EAAc;cArD1B,sDAqD0B;eArDjB;AACRpD,sBAAY,EAAE,EADN;AAERJ,iBAAO,EAAE,CACP,4DADO,CAFD;AAMRZ,iBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAGP,qEAHO,EAIP,iEAJO,EAKP,+DALO,EAMP,qEANO,EAOP,qFAPO,EAQP,uEARO,EASP,oFATO,EAUP,yEAVO,EAWP,sFAXO,EAYP,qEAZO,EAaP,6EAbO,EAcP,uEAdO,EAeP,2EAfO,EAgBP,iFAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,+EAnBO,EAoBP,8EApBO,EAqBP,qEArBO,EAsBP,uEAtBO,EAuBP,qEAvBO,EAwBP,qEAxBO,EAyBP,2EAzBO,EA0BP,+EA1BO,EA2BP,oFA3BO,EA4BP,4FA5BO,EA6BP,uEA7BO,EA8BP,uEA9BO,EA+BP,yEA/BO,EAgCP,2EAhCO,EAiCP,yEAjCO,EAkCP,oFAlCO,EAmCP,8EAnCO,EAoCP,qEApCO,EAqCP,uEArCO,EAsCP,qEAtCO,EAuCP,2EAvCO,EAwCP,2EAxCO,EAyCP,qEAzCO,EA0CP,mEA1CO,EA2CP,gEA3CO,EA4CP,sEA5CO;AAND,S;AAqDiB,Q;;;;;;;;;;;;;;;;;;ACrG3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAC4C;;;;;ACWtC;;AACE;;AACF;;;;;;AAF2D;;AACzD;;AAAA;;;;QDFKqE,sB;AAPb;AAAA;;AAUE,aAAAC,OAAA,GAAU,IAAI,0DAAJ,EAAV;AACA,aAAAC,OAAA,GAAoB,CAAC,SAAD,EAAY,cAAZ,EAA4B,aAA5B,EAA2C,sBAA3C,CAApB;AAoBD;;;;mCAhBS;AAAA;;AAEN,eAAKC,eAAL,GAAuB,KAAKF,OAAL,CAAaG,YAAb,CAA0BC,IAA1B,CACrB,iEAAU,EAAV,CADqB,EAErB,2DAAI,UAAA3C,KAAK;AAAA,mBAAI,MAAI,CAAC4C,OAAL,CAAa5C,KAAb,CAAJ;AAAA,WAAT,CAFqB,CAAvB;AAID;;;gCACeA,K,EAAa;AAAA;;AAC3B,cAAM6C,WAAW,GAAG,KAAKC,eAAL,CAAqB9C,KAArB,CAApB;;AACA,iBAAO,KAAKwC,OAAL,CAAaO,MAAb,CAAoB,UAAAC,MAAM;AAAA,mBAAI,MAAI,CAACF,eAAL,CAAqBE,MAArB,EAA6BC,QAA7B,CAAsCJ,WAAtC,CAAJ;AAAA,WAA1B,CAAP;AACD;;;wCAEuB7C,K,EAAa;AACnC,iBAAOA,KAAK,CAACkD,WAAN,GAAoBC,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAP;AACD;;;;;;;uBAtBUb,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,wC;AAAA,e;AAAA,a;AAAA,0Q;AAAA;AAAA;ACXnC;;AACA;;AACE;;AAGF;;AACE;;AACE;;AAIA;;AACE;;;;AAGF;;AACF;;AACF;;AAEA;;AACA;;;;;;AAXW;;AAAA,+FAAuB,iBAAvB,EAAuB,GAAvB;;AAGO;;AAAA;;;;;;;;;;sEDDLA,sB,EAAsB;cAPlC,uDAOkC;eAPxB;AACTlE,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAOwB,Q;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYc;;AACE;;AAAc;AAAA;;AAAA;;AAAA,mDAAoC,IAApC;AAAwC,SAAxC;;AAId;;AACF;;;;;;AAJgB;;AAAA,mIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAKhB;;AACE;;AAAc;AAAA;;AAAA,iBAASqB,MAAM,CAACC,eAAP,EAAT;AAAiC,SAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,0BACf,QAAAC,SAAA,gBADe,GACS,IADT;AACa,SAD/C;;AAId;;AACF;;;;;;;;AAHgB;;AAAA,kHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAQhB;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AACI;;AACG;;AACH;;AAEF;;AAEN;;;;;;AAL2B;;AAAA;;;;;;AAUzB;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AACI;;AAAU;;AAAM;;AAClB;;AACJ;;;;;;AAKF;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,SAAA,gBAAT;AAA8B,SAA9B;;AACJ;;;;;;;;AAWI;;AAA8E;AAAA;;AAAA;;AAAA,iCAAe,EAAf;AAAiB,SAAjB;;AAC5E;;AAAU;;AAAK;;AACjB;;;;ADnEhB,QAAMT,YAAY,GAAqB,CACrC;AAACC,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KADqC,EAErC;AAACD,cAAQ,EAAE,CAAX;AAAcC,UAAI,EAAE;AAApB,KAFqC,CAAvC;;QAWa8D,uB;AAEX,yCAAc;AAAA;;AAId,aAAApD,KAAA,GAAQ,EAAR;AAEA,aAAAP,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA8B,QAA9B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuCN,YAAvC,CAAb;AACA,aAAAS,SAAA,GAAY,IAAI,uEAAJ,CAAmC,IAAnC,EAAyC,EAAzC,CAAZ;AARiB;;;;mCAET,CACP;AAOD;;;;wCACgB;AACd,cAAMI,WAAW,GAAG,KAAKJ,SAAL,CAAeK,QAAf,CAAwBC,MAA5C;AACA,cAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBF,MAArC;AACA,iBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;uCACe;AAAA;;AACb,eAAKE,aAAL,KACI,KAAKT,SAAL,CAAeU,KAAf,EADJ,GAEI,KAAKb,UAAL,CAAgBW,IAAhB,CAAqBG,OAArB,CAA6B,UAAAC,GAAG;AAAA,mBAAI,OAAI,CAACZ,SAAL,CAAea,MAAf,CAAsBD,GAAtB,CAAJ;AAAA,WAAhC,CAFJ;AAGD;AAED;;;;sCACcA,G,EAAoB;AAChC,cAAI,CAACA,GAAL,EAAU;AACR,6BAAU,KAAKH,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,2BAAU,KAAKT,SAAL,CAAec,UAAf,CAA0BF,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACpB,QAAJ,GAAe,CAAvF;AACD;;;;;;;uBAhCU+D,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,a;AAAA,ivC;AAAA;AAAA;ACpBpC;;AACI;;AACE;;AACA;;AAAgB;;AAAyB;;AACzC;;AACF;;AAEA;;AACI;;AAGI;;AACE;;AAOA;;AAOF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAGF;;AACF;;AACA;;AACG;;AAGA;;AACC;;AACI;;AAAW;;AAAmB;;AAC9B;;AAA4B;AAAA;AAAA;;AAA5B;;AACA;;AAGF;;AAEN;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AACpB;;AACN;;AACA;;AAEJ;;AACA;;AAKF;;;;AArFuB;;AAAA;;AAoDM;;AAAA;;AACP;;AAAA;;AAYoB;;AAAA;;AACT;;AAAA;;;;;;;;;sEDtDtBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACThF,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AEpBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;;;;;;;AAOC;;;;;;AAGA;;;;;;AAID;;;;;;;;AAIA;;;;;;AAAA;;;;QDbW+E,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAET,CACP;;;oCACWC,O,EAAc;AACxBC,iBAAO,CAACC,GAAR,CAAYF,OAAZ;AACD;;;;;;;uBARUD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,qC;AAAA;AAAA;;;;;;;;;;;;;;;ACPhC;;AACC;;AAIC;;AAED;;AACC;;AAGA;;AAGD;;AACA;;AAA6B;AAAA,mBAAW,IAAAI,WAAA,CAAY,SAAS9D,MAAM,CAAC+D,IAAP,CAAYpE,IAAjC,CAAX;AAAiD,WAAjD;;AAG7B;;AACA;;AAAsC;AAAA,mBAAW,IAAAmE,WAAA,oBAA+B,SAA/B,GAA2C9D,MAAM,CAAC+D,IAAP,CAAYC,aAAvD,CAAX;AAAgF,WAAhF;;AAMvC;;;;;;AAxB8B;;AAAA;;;;;;;;;sEDMjBN,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTjF,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;gBAC7B,uD;iBAAU,W;;;;;;;;;;;;;;;;;;;;AERb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasF,0B;AAMX,0CAAoBC,kBAApB,EAA4D;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AAJpB,aAAAvE,IAAA,GAAO,SAAP;AACO,aAAAoE,IAAA,GAAO;AAAEpE,cAAI,EAAE,MAAR;AAAgBqE,uBAAa,EAAE;AAA/B,SAAP;AAGwD;;;;sCAE1ChE,M,EAAoB+D,I,EAAS;AAChD,eAAKG,kBAAL,CAAwBC,IAAxB,CAA6BC,IAA7B,CAAkC;AAChCC,uBAAW,EAAE,KAAKC,UAAL,CAAgBD,WADG;AAEhCE,iBAAK,EAAEvE,MAFyB;AAGhC+D,gBAAI,EAAEA;AAH0B,WAAlC;AAMA/D,gBAAM,CAACwE,cAAP;AACAxE,gBAAM,CAACC,eAAP;AACD;;;mCAEO,CACP;;;;;;;uBApBUgE,0B,EAA0B,mI;AAAA,K;;;YAA1BA,0B;AAA0B,4C;AAAA;AAAA;oEAI1B,oF,EAAmB,I;;;;;;;;;;;;;;ACbhC;;AACI;;AACF;;AACA;;AACI;;AACI;AAAA,mBAAe,IAAAQ,aAAA,kBAAf;AAA0C,WAA1C;;AAGF;;AACA;;AACN;;AAEA;;AAAgB;;AAAhB;;;;AAJM;;AAAA;;;;;;;;;sEDCKR,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTxF,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK4B,Q;;;;;;gBAIpC,uD;iBAAU,oF;;;;;;;;;;;;;;;;;;;;AEbb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM+F,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIjB,OAAO,CAACkB,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adecptopersona',\n  templateUrl: './adecptopersona.component.html',\n  styleUrls: ['./adecptopersona.component.scss']\n})\nexport class AdecptopersonaComponent implements OnInit \n{\n  \n  ngOnInit(): void \n  {}\n  \n\n}\n","<app-apppresentationcard></app-apppresentationcard>\n<!-- <app-profilesearch></app-profilesearch> -->\n<app-appcversion></app-appcversion>\n<!-- <app-appinstrumentos></app-appinstrumentos> -->\n<app-apptabs></app-apptabs>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adecptopersonaprofile',\n  templateUrl: './adecptopersonaprofile.component.html',\n  styleUrls: ['./adecptopersonaprofile.component.scss']\n})\nexport class AdecptopersonaprofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-profilesearch></app-profilesearch>\n<app-controlversionappp></app-controlversionappp>\n<app-escolaridad></app-escolaridad>\n<app-experiencia></app-experiencia>\n<app-conocriticos></app-conocriticos>\n<app-reqtecnologico></app-reqtecnologico> \n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdecptopersonaComponent } from './adecptopersona/adecptopersona.component'; \nimport {AdecptopersonaprofileComponent} from './adecptopersonaprofile/adecptopersonaprofile.component';\nimport { RightclickserviceComponent } from './rightclickservice/rightclickservice.component';\n// import { PresentationCardComponent } from './presentation-card//presentation-card.component';\nconst routes: Routes = [\n  { path:'e',component:AdecptopersonaComponent},\n  { path:'ae',component:AdecptopersonaprofileComponent},\n  { path:'cd',component:RightclickserviceComponent }\n //{ path:'',component:PresentationCardComponent},\n  \n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<app-header></app-header>\n<router-outlet></router-outlet>\n\n  \n<app-footer></app-footer>","import {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule} from './material.module';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {AdecptopersonaprofileComponent} from './adecptopersonaprofile/adecptopersonaprofile.component';\nimport {AdecptopersonaComponent} from './adecptopersona/adecptopersona.component';\nimport {ProfilesearchComponent} from './profilesearch/profilesearch.component';\nimport {EscolaridadComponent} from './escolaridad/escolaridad.component';\nimport {ExperienciaComponent} from './experiencia/experiencia.component';\nimport {ConocriticosComponent} from './conocriticos/conocriticos.component'\nimport {ControlversionapppComponent} from './controlversionappp/controlversionappp.component';\nimport {AppconocriticosComponent} from './appconocriticos/appconocriticos.component';\nimport {AppcversionComponent} from './appcversion/appcversion.component';\nimport {AppexperienciaComponent} from './appexperiencia/appexperiencia.component';\nimport {AppescolaridadComponent} from './appescolaridad/appescolaridad.component';\nimport {ApprecomendComponent} from './apprecomend/apprecomend.component';\nimport {ApppresentationcardComponent} from './apppresentationcard/apppresentationcard.component';\nimport {AppnotacomentarioComponent} from './appnotacomentario/appnotacomentario.component';\nimport {AppuploadimageComponent} from './appuploadimage/appuploadimage.component';\nimport {AppinstrumentosComponent} from './appinstrumentos/appinstrumentos.component';\nimport {AppcasonegocioComponent} from './appcasonegocio/appcasonegocio.component';\nimport {ApptabsComponent} from './apptabs/apptabs.component';\nimport {ContextMenuModule } from 'ngx-contextmenu';\nimport {RightclickComponent } from './rightclick/rightclick.component';\nimport { RightclickserviceComponent} from  './rightclickservice/rightclickservice.component';\nimport {ReqtecnologicoComponent} from './reqtecnologico/reqtecnologico.component';\nimport {AppreqtecnologicoComponent} from './appreqtecnologico/appreqtecnologico.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,HeaderComponent,FooterComponent,AdecptopersonaprofileComponent,AdecptopersonaComponent,ProfilesearchComponent,EscolaridadComponent,ExperienciaComponent,ConocriticosComponent,ControlversionapppComponent\n  ,AppconocriticosComponent,AppcversionComponent,AppexperienciaComponent,AppescolaridadComponent,ApprecomendComponent,\n  ApppresentationcardComponent,AppnotacomentarioComponent,AppuploadimageComponent,AppinstrumentosComponent,AppcasonegocioComponent,ApptabsComponent\n  ,RightclickComponent,RightclickserviceComponent,ReqtecnologicoComponent,AppreqtecnologicoComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,MaterialModule,FormsModule,ReactiveFormsModule,ContextMenuModule.forRoot()\n    ]\n  ,\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\nexport interface CasoNegocio {\n  name: string;\n  position: number;\n  valoracion:number;\n}\nconst ELEMENT_DATA: CasoNegocio[] = [\n  {position: 1, name: 'PERSUADE',valoracion:2},\n  {position: 2, name: 'ADAPTABILIDAD SITUACIONAL',valoracion:2},\n  {position: 3, name: 'SABE MOVERSE EN REDES',valoracion:2},\n  {position: 4, name: 'AGILIDAD MENTAL',valoracion:2},\n  {position: 5, name: 'AGILIDAD INTERPERSONAL',valoracion:2},\n  {position: 6, name: 'AGILIDAD PARA EL CAMBIO',valoracion:2},\n  {position: 7, name: 'AGILIDAD CON LOS RESULTADOS',valoracion:2},\n  {position: 8, name: 'JERARQUIA',valoracion:2},\n  {position: 9, name: 'ESTATUS',valoracion:2},\n  {position: 10, name:'APRENDIZAJE',valoracion:2},\n];\n\n@Component({\n  selector: 'app-appcasonegocio',\n  templateUrl: './appcasonegocio.component.html',\n  styleUrls: ['./appcasonegocio.component.scss']\n})\nexport class AppcasonegocioComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n  displayedColumns: string[] = ['position', 'name','valoracion'];\n  dataSource = new MatTableDataSource<CasoNegocio>(ELEMENT_DATA);\n  \n\n}\n","\n    <table mat-table [dataSource]=\"dataSource\" class=\"example-container mat-elevation-z8\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n    \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Competencia </th>\n        <td mat-cell *matCellDef=\"let element\"> \n          <form class=\"example-form\">\n              <mat-form-field class=\"example-full-width\">\n                 <input matInput value=\"{{element.name}}\">\n              </mat-form-field>                 \n             \n            </form>\n                  \n      </td>\n      </ng-container>\n     <!-- Name Column -->\n     <ng-container matColumnDef=\"valoracion\">\n      <th mat-header-cell *matHeaderCellDef> valoración(1-5) </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        <form class=\"example-form\">\n          <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n            <mat-label>escala</mat-label>\n             <input   matInput value=\"{{element.valoracion}}\">\n          </mat-form-field>                 \n         \n        </form>\n              \n    </td>\n     </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">    </tr>\n  </table>\n \n\n\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ConocimientosCriticos {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: ConocimientosCriticos[] = [\n  {position: 1, name: 'a) Relación con Sindicatos',name2:''},\n  {position: 2, name: 'b) Seguridad e Higiene',name2:''},\n  {position: 3, name: 'c) Calidad',name2:''},\n  {position: 4, name: 'd) Loremp ipslus',name2:''},\n  {position: 5, name: 'e) xxxx xxxxx',name2:''},\n  \n];\n\n@Component({\n  selector: 'app-appconocriticos',\n  templateUrl: './appconocriticos.component.html',\n  styleUrls: ['./appconocriticos.component.scss']\n})\nexport class AppconocriticosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<ConocimientosCriticos>(ELEMENT_DATA);\n  selection = new SelectionModel<ConocimientosCriticos>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ConocimientosCriticos): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Conocimientos Técnicos </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n           <!-- Name Column -->\n           <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo conocimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appcversion',\n  templateUrl: './appcversion.component.html',\n  styleUrls: ['./appcversion.component.scss']\n})\nexport class AppcversionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  states: string[] = [\n    'Gte.R.H Octubre ', 'Gte.R.H Noviembre', 'Gte.R.H Reclutamiento Zona2', 'Gte.R.H Nutrissa', 'Gte.R.H Del fuerte', \n      ];\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"4em\">\n  <mat-grid-tile>\n    <!-- <mat-form-field appearance=\"fill\">\n      <mat-label>Nueva!</mat-label>\n      <select matNativeControl required>\n        <option value=\"Limpia\">Limpia</option>\n        <option value=\"Clonar\">Clona</option>       \n      </select>\n    </mat-form-field> -->\n  </mat-grid-tile>\n  <mat-grid-tile >\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Selecciona Proyecto</mat-label>\n      <mat-select>\n          <mat-option>None</mat-option>\n          <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\n      </mat-select>\n      </mat-form-field>\n  </mat-grid-tile>\n</mat-grid-list>\n<hr>","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Escolaridad {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: Escolaridad[] = [\n  {position: 1, name: 'Lic. Económico - Administrativo o Social  Titulado',name2:''},\n  {position: 2, name: 'Lic. Psicologia - Titulado',name2:''},\n  \n];\n@Component({\n  selector: 'app-appescolaridad',\n  templateUrl: './appescolaridad.component.html',\n  styleUrls: ['./appescolaridad.component.scss']\n})\nexport class AppescolaridadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = 'Clear me';\n  \n  // displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  \n  displayedColumns: string[] = ['select', 'position', 'name','name2','delete'];\n  dataSource = new MatTableDataSource<Escolaridad>(ELEMENT_DATA);\n  selection = new SelectionModel<Escolaridad>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Escolaridad): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n  \n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\" class=\"border-bottom-0\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0 \">No.</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Escolaridad </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          <!-- Name2 Column -->\n          <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <form class=\"example-form\">\n                  <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                    <mat-label>describe aqui</mat-label>\n                     <input   matInput value=\"{{element.name2}}\">\n                  </mat-form-field>                 \n                 \n                </form>\n                      \n          </td>\n          </ng-container>\n          <!-- GradosDom Column -->\n          <!-- <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\">Semáforo </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Cumple</mat-radio-button>\n                <mat-radio-button value=\"2\">No cumple</mat-radio-button>\n                <mat-radio-button value=\"3\">Revisión</mat-radio-button>              \n              </mat-radio-group>\n               \n                      \n          </td>\n          </ng-container> -->\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"border-left-0 border-bottom-0\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        \n        <!-- <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva </mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div> -->\n       \n    </mat-card-content>\n    <mat-card-actions>\n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Experiencia {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: Experiencia[] = [\n  {position: 1, name: '10 años de experiencia consolidada en Recursos Humanos como Generalista y/o Gerente.',name2:''},\n  {position: 2, name: 'Experiencia en plantas operativas y manejo de equipos de trabajo',name2:''},\n  {position: 3, name: 'Conocimiento en Relaciones Laborales',name2:''},\n  {position: 4, name: 'Conocimiento en Nómina',name2:''},\n  {position: 5, name: 'Conocimiento en Compensaciones',name2:''},\n];\n@Component({\n  selector: 'app-appexperiencia',\n  templateUrl: './appexperiencia.component.html',\n  styleUrls: ['./appexperiencia.component.scss']\n})\nexport class AppexperienciaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<Experiencia>(ELEMENT_DATA);\n  selection = new SelectionModel<Experiencia>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Experiencia): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Experiencia Crítica </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia  </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva experiencia</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appinstrumentos',\n  templateUrl: './appinstrumentos.component.html',\n  styleUrls: ['./appinstrumentos.component.scss']\n})\nexport class AppinstrumentosComponent implements OnInit {\n  checked:boolean;\n  modo=\"Seleccion\";\n  constructor() \n  { }\n  \n  ngOnInit(): void {   \n     }\n  \n  cambia()\n  {\n    debugger;\n    if (this.checked == undefined)\n    {\n      this.checked=true;\n      this.modo=\"Desarrollo\";\n      debugger;\n    } \n    else if (this.checked)\n    {\n     this.checked=false;\n      this.modo=\"Seleccion\";\n      debugger;\n    }\n    else if (this.checked==false)\n    {\n      this.checked=true;\n      this.modo=\"Desarrollo\";\n      debugger; \n    }\n  }\n  \n}\n","\n<mat-grid-list cols=5 class=\"myGridList\" rowHeight=\"fit\">\n    \n    <mat-grid-tile></mat-grid-tile>\n    <mat-grid-tile>      </mat-grid-tile>    \n      <mat-grid-tile>\n        <h3>Instrumentos-</h3><h4 class=\"textoColorPeople\">{{modo}}</h4>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"slide-title\"><p style=\"font-size: 0.9em;color:dimgray;\">Prender Desarrollo</p>&nbsp;\n        <mat-slide-toggle [(ngModel)]=\"checked\" (toggleChange)=\"cambia()\"></mat-slide-toggle>\n      </mat-grid-tile>\n      <mat-grid-tile></mat-grid-tile>\n</mat-grid-list>\n  \n  <!-- <mat-grid-list cols=6 class=\"myGridList\" rowHeight=\"fit\">\n    <mat-grid-tile></mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Psicometría</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\"  min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Entrevista C.</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Caso de Negocio</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>360ª</mat-label>\n        <input matInput type=\"number\" placeholder=\"Ex.50\" max=\"90\" min=\"10\">\n        <span matSuffix>%</span>               \n      </mat-form-field>\n    </mat-grid-tile>\n    <mat-grid-tile></mat-grid-tile>\n  </mat-grid-list>\n   -->\n  <hr>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appnotacomentario',\n  templateUrl: './appnotacomentario.component.html',\n  styleUrls: ['./appnotacomentario.component.scss']\n})\nexport class AppnotacomentarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n}\n","<hr>\n  <div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-md-2\"></div>\n     \n      <div class=\"col-md-8\">\n        <div class=\"card-body\">\n\n <p style=\"text-align: center;font-size: large;\" class=\"text-black-50\">Nota/Comentario</p>\n        \n          <form class=\"example-form\">\n            <mat-form-field class=\"example-full-width\">\n              <mat-label></mat-label>\n              <!-- <input matInput #message maxlength=\"1000\" placeholder=\"...\" [(ngModel)]=\"message.value\"> -->\n              <textarea matInput #message maxlength=\"1000\" name=\"message\" \n                [(ngModel)]=\"value\"></textarea>\n              <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                <mat-icon>close</mat-icon>\n              </button>\n              <mat-hint align=\"start\"><strong></strong> </mat-hint>\n              <mat-hint align=\"end\">{{message.value.length}} / 1000</mat-hint>\n            </mat-form-field>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-2\"></div>     \n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n\nexport interface Menu\n{\n  label:string\n}\n@Component({\n  selector: 'app-apppresentationcard',\n  templateUrl: './apppresentationcard.component.html',\n  styleUrls: ['./apppresentationcard.component.scss']\n})\nexport class ApppresentationcardComponent implements OnInit {\n\n  pricometria = new FormControl(16, Validators.min(10));\n\n  constructor() {};\n  data:Menu[]=[{label:'Reporte'}];\n  label=\"Reporte\";\n\n  ngOnInit(): void {\n  } \n\n}\n","  <div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-md-2\"></div>\n      <div class=\"col-md-2\">     \n        <img class=\"rounded-circle z-depth-2\" width=\"100rem\" height=\"100rem\" alt=\"100x100\" src=\"https://mdbootstrap.com/img/Photos/Avatars/img%20(31).jpg\"\n        data-holder-rendered=\"true\">\n      <app-appuploadimage></app-appuploadimage>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title texto-centro\" >Reporte de Valoración Integral </h2>\n          <p class=\"card-text texto-centro\"> Lidia V. <button mat-mini-fab>Editar</button></p>  \n          <p class=\"card-text text-secondary texto-centro\">Gerente de Rec.Y Sel.</p>\n        </div>\n      </div>\n      <div class=\"col-md-2\">\n        <p class=\"text-lg-right mb-3\">\n          <!-- <button mat-mini-fab color=\"warn\" onClick=\"window.open('https://drive.google.com/file/d/1OeLCeVdbI2azPpJ9D3uMM4FbAbKCwtaU/view?usp=sharing')\" aria-label=\"Example icon button with a filter list icon\">\n           Reporte Normal\n          </button><br>\n          <button mat-mini-fab color=\"warn\" onClick=\"window.open('https://drive.google.com/file/d/1OeLCeVdbI2azPpJ9D3uMM4FbAbKCwtaU/view?usp=sharing')\" aria-label=\"Example icon button with a filter list icon\">\n            Reporte con Ins3\n           </button> -->\n           <button mat-raised-button onClick=\"window.open('https://drive.google.com/file/d/1e0ZaUHN1Upa6YOFpJOXsEw0QB2k42rO8/view?usp=sharing')\">Descargar Reporte Normal</button><br>\n           <button mat-raised-button color=\"primary\" onClick=\"window.open('https://drive.google.com/file/d/1icR6dTiKcpsYdqWdX74MYSxXU0z7IkRh/view?usp=sharing')\">Descargar Con Instrum3</button>\n        </p>\n      </div>\n      <div class=\"col-md-2\">\n       \n\n\n      </div>     \n    </div>\n  </div>\n  <hr>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n@Component({\n  selector: 'app-apprecomend',\n  templateUrl: './apprecomend.component.html',\n  styleUrls: ['./apprecomend.component.scss']\n})\nexport class ApprecomendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  favoriteSeason: string;\n  seasons: string[] = ['Recomendable', 'Recomendable con reservas', 'No recomendable', 'No cubre el perfil'];\n}\n","\n<div class=\"card mb-3\" style=\"max-width:99%;border: none;\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-md-2\"></div>\n\n    <div class=\"col-md-8\">\n      <div class=\"card-body\">\n\n        <p style=\"text-align: center;font-size: large;\" class=\"text-black-50\">Recomendación</p>\n\n        <label id=\"example-radio-group-label\"></label>\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n          [(ngModel)]=\"favoriteSeason\">\n          <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\n            {{season}}\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n</div>\n\n\n<div>\n    <!-- {{favoriteSeason}} -->\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ReqTecnologico {\n  name: string;\n  position: number;\n  name2:string;\n}\nconst ELEMENT_DATA: ReqTecnologico[] = [\n  {position: 1, name: 'a) Excel',name2:''},\n  {position: 2, name: 'b) ISO 9001:2015',name2:''},\n  \n];\n@Component({\n  selector: 'app-appreqtecnologico',\n  templateUrl: './appreqtecnologico.component.html',\n  styleUrls: ['./appreqtecnologico.component.scss']\n})\nexport class AppreqtecnologicoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','name2','name3','delete'];\n  dataSource = new MatTableDataSource<ReqTecnologico>(ELEMENT_DATA);\n  selection = new SelectionModel<ReqTecnologico>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ReqTecnologico): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title></mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Requerimiento Tecnológico</th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n           <!-- Name Column -->\n           <ng-container matColumnDef=\"name2\">\n            <th mat-header-cell *matHeaderCellDef> Evidencia </th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <form class=\"example-form\">\n                <mat-form-field width=\"6em\" class=\"example-full-width border-left \" >\n                  <mat-label>describe aqui</mat-label>\n                   <input   matInput value=\"{{element.name2}}\">\n                </mat-form-field>                 \n               \n              </form>\n                    \n          </td>\n           </ng-container>\n          <!-- GradosDom Column -->\n          <ng-container matColumnDef=\"name3\">\n            <th mat-header-cell *matHeaderCellDef class=\"border-left-0\"> GradosDominio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"border-bottom-0\"> \n              <mat-radio-group aria-label=\"Selecciona un grado\">\n                <mat-radio-button class=\"mat-radio-label-content\" value=\"1\">Intermedio</mat-radio-button>\n                <mat-radio-button value=\"2\">Avanzado</mat-radio-button>\n                <!-- <mat-radio-button value=\"3\">Talentoso</mat-radio-button> -->\n              </mat-radio-group>\n              \n                      \n          </td>          \n          </ng-container>\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <!-- <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo requerimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field> -->\n              \n        </div>\n        <div class=\"col-md-2\">\n            <!-- <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button> -->\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n@Component({\n  selector: 'app-apptabs',\n  templateUrl: './apptabs.component.html',\n  styleUrls: ['./apptabs.component.scss']\n})\nexport class ApptabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-tab-group animationDuration=\"2000ms\" mat-align-tabs=\"center\" [color]=\"'warn'\" [backgroundColor]=\"''\">\n    <mat-tab label=\"Experiencia\">\n        <app-appescolaridad></app-appescolaridad>\n        <app-appexperiencia></app-appexperiencia>\n        <app-appconocriticos></app-appconocriticos>\n        <app-appreqtecnologico></app-appreqtecnologico> \n        <app-apprecomend></app-apprecomend>\n        <app-appnotacomentario></app-appnotacomentario>\n    </mat-tab>\n    <mat-tab label=\"Instrumento 3\">\n       \n            <app-appcasonegocio></app-appcasonegocio>\n       \n    </mat-tab>\n   \n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appuploadimage',\n  templateUrl: './appuploadimage.component.html',\n  styleUrls: ['./appuploadimage.component.scss']\n})\nexport class AppuploadimageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"input-group mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Cargar</span>\n    </div>\n    <div class=\"custom-file\">\n      <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\n      <label class=\"custom-file-label\" for=\"inputGroupFile01\">Buscar imagen</label>\n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface ConocimientosCriticos {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: ConocimientosCriticos[] = [\n  {position: 1, name: 'a) Relación con Sindicatos'},\n  {position: 2, name: 'b) Seguridad e Higiene'},\n  {position: 3, name: 'c) Calidad'},\n  {position: 4, name: 'd) Loremp ipslus'},\n  {position: 5, name: 'e) xxxx xxxxx'},\n];\n\n@Component({\n  selector: 'app-conocriticos',\n  templateUrl: './conocriticos.component.html',\n  styleUrls: ['./conocriticos.component.scss']\n})\nexport class ConocriticosComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<ConocimientosCriticos>(ELEMENT_DATA);\n  selection = new SelectionModel<ConocimientosCriticos>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ConocimientosCriticos): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Conocimientos Técnicos</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo conocimiento </mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-controlversionappp',\n  templateUrl: './controlversionappp.component.html',\n  styleUrls: ['./controlversionappp.component.scss']\n})\nexport class ControlversionapppComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {       }\n  states: string[] = [\n    'Gte.R.H Octubre ', 'Gte.R.H Noviembre', 'Gte.R.H Reclutamiento Zona2', 'Gte.R.H Nutrissa', 'Gte.R.H Del fuerte',\n  ];\n}\n","       <div class=\"row\">\n           <div class=\"col-md-6 text-md-right\">\n            <mat-form-field appearance=\"fill\">\n            <mat-label>Selecciona Proyecto</mat-label>\n            <mat-select>\n                <mat-option>None</mat-option>\n                <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\n            </mat-select>\n            </mat-form-field>\n           </div>\n           <div class=\"col-md-6\">\n          \n            <!-- Example single danger button -->\n            <div ngbDropdown class=\"d-inline-block\">\n                <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Nuevo!</button>\n                <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                  <button ngbDropdownItem>Limpio</button>\n                  <button ngbDropdownItem>Clonar</button>                  \n                </div>\n              </div>\n       </div>  </div>  <hr>\n\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface Escolaridad {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: Escolaridad[] = [\n  {position: 1, name: 'Lic. Económico - Administrativo o Social  Titulado'},\n  {position: 2, name: 'Lic. Psicologia - Titulado'},\n  \n];\n\n@Component({\n  selector: 'app-escolaridad',\n  templateUrl: './escolaridad.component.html',\n  styleUrls: ['./escolaridad.component.scss']\n})\nexport class EscolaridadComponent implements OnInit {\n  constructor() { }\n  ngOnInit(): void {  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<Escolaridad>(ELEMENT_DATA);\n  selection = new SelectionModel<Escolaridad>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Escolaridad): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Escolaridad</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva escolaridad</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n  \n\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface Experiencia {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: Experiencia[] = [\n  {position: 1, name: '10 años de experiencia consolidada en Recursos Humanos como Generalista y/o Gerente.'},\n  {position: 2, name: 'Experiencia en plantas operativas y manejo de equipos de trabajo'},\n  {position: 3, name: 'Conocimiento en Relaciones Laborales'},\n  {position: 4, name: 'Conocimiento en Nómina'},\n  {position: 5, name: 'Conocimiento en Compensaciones'},\n];\n\n@Component({\n  selector: 'app-experiencia',\n  templateUrl: './experiencia.component.html',\n  styleUrls: ['./experiencia.component.scss']\n})\nexport class ExperienciaComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {  }\n\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<Experiencia>(ELEMENT_DATA);\n  selection = new SelectionModel<Experiencia>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Experiencia): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Experiencia Crítica</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nueva experiencia</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n<p class=\" text-center\" style=\"font-family: Arial; font-weight: normal; color: rgba(66, 64, 64, 0.6); font-size:0.9em\">© 2015 Todos los derechos reservados a &nbsp;\n<a id=\"footerimg\" href=\"http://peoplevalue.com.mx\" style=\"color:#2F61C5;font-family:Arial;font-size:0.9em;font-weight:bold;\">www.peoplevalue.com.mx</a>&nbsp;&nbsp;\n<img src=\"https://pvstc2.talentassessnet3d.com.mx/talent3d/administrador/images/PeopleValue-Azul14percent.png\"></p>\n        <span></span>\n</div>","import { Component, OnInit } from '@angular/core';\n//import {MatButtonModule} from '@angular/material/button'; \n//import {MatIconModule} from '@angular/material/icon';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <nav class=\"navbar sticky-top navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Sticky top</a>\n  </nav> -->\n\n\n  <nav class=\"nav\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"https://pvstc2.talentassessnet3d.com.mx/talent3d/administrador/images/Assessnet_blanco_sinletras20percent.png\"\n         width=\"auto\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\">\n         Talent3d\n    </a>\n    <ul class=\"nav__list\">\n        <li class=\"nav__item\">\n            <button mat-button [matMenuTriggerFor]=\"perfilamiento\">Perfilamiento</button>\n            <mat-menu #perfilamiento=\"matMenu\">\n              <button mat-menu-item [matMenuTriggerFor]=\"Competencias\">Competencias</button>\n              <button mat-menu-item [matMenuTriggerFor]=\"Tcaps\">Tcaps</button>\n              <button mat-menu-item [routerLink]=\"['ae']\">AdminExperiencia</button>\n            </mat-menu>\n            <mat-menu #Competencias=\"matMenu\">\n                <button mat-menu-item>Administrar</button>\n                <button mat-menu-item>Diccionario</button>\n            </mat-menu>\n              <mat-menu #Tcaps=\"matMenu\">\n                <button mat-menu-item>Administrar</button>\n                <button mat-menu-item>Diccionario</button>\n              </mat-menu>\n              \n        </li>\n        <li class=\"nav__item\">\n            <button mat-button [matMenuTriggerFor]=\"Administracion\">Administración</button>\n            <mat-menu #Administracion=\"matMenu\">\n                <button mat-menu-item>Registro</button>\n                <button mat-menu-item>Registro Masivo</button>\n                <button mat-menu-item>Seguimiento</button>\n                <button mat-menu-item [routerLink]=\"['e']\">Experiencia</button>\n            </mat-menu>\n\n        </li>\n        <li class=\"nav__item\">Seguridad</li>\n        <li class=\"nav__item\">\n            <button mat-fab color=\"primary\">Lidia</button>\n        </li>\n    </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    \n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms'; /*Para su funcionamiento en app.module agregaste:FormModule,Reactiveforms*/\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n@Component({\n  selector: 'app-profilesearch',\n  templateUrl: './profilesearch.component.html',\n  styleUrls: ['./profilesearch.component.scss']\n})\n\n  \nexport class ProfilesearchComponent implements OnInit {\n\n  \n  control = new FormControl();\n  streets: string[] = ['Gte.R.H', 'Director R.H', 'Reclutadora', 'Coordinadora de Rec.'];\n  filteredStreets: Observable<string[]>;\n\n\n  ngOnInit(): void \n  {\n    this.filteredStreets = this.control.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n  private _filter(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streets.filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n\n}\n","<mat-card>\n<div class=\"row\">\n  <div class=\"col-md-4\">\n \n  </div>\n<div class=\"col-md-8 text-md-left\">\n  <form class=\"example-form\">\n    <input type=\"text\"\n           placeholder=\"Busca un puesto\"\n           [formControl]=\"control\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let street of filteredStreets | async\" [value]=\"street\">\n        {{street}}\n      </mat-option>\n    </mat-autocomplete>\n  </form>   \n</div>\n\n</div>\n</mat-card>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface ReqTecnologico {\n  name: string;\n  position: number;\n  \n}\nconst ELEMENT_DATA: ReqTecnologico[] = [\n  {position: 1, name: 'a) Excel'},\n  {position: 2, name: 'b) ISO 9001:2015'},\n  \n];\n\n@Component({\n  selector: 'app-reqtecnologico',\n  templateUrl: './reqtecnologico.component.html',\n  styleUrls: ['./reqtecnologico.component.scss']\n})\nexport class ReqtecnologicoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  value = '';\n\n  displayedColumns: string[] = ['select', 'position', 'name','delete'];\n  dataSource = new MatTableDataSource<ReqTecnologico>(ELEMENT_DATA);\n  selection = new SelectionModel<ReqTecnologico>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: ReqTecnologico): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"\"></div>\n      <mat-card-title>Requerimiento Tecnológico</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                              (change)=\"$event ? selection.toggle(row) : null\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                       <input matInput value=\"{{element.name}}\">\n                    </mat-form-field>                 \n                   \n                  </form>\n                        \n            </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"delete\">\n              <th mat-header-cell *matHeaderCellDef> Borrar </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n              </td>\n            </ng-container>\n          \n            \n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n        <hr>\n        <div class=\"row\">\n           <div class=\"col-md-6\">\n\n           </div>\n           <div class=\"col-md-4\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Nuevo requerimiento</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"value\">\n                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n              \n        </div>\n        <div class=\"col-md-2\">\n            <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a plus one icon\">\n                <mat-icon>plus_one</mat-icon>\n              </button>\n        </div>\n        </div>\n       \n    </mat-card-content>\n    <mat-card-actions>\n\n       \n      \n    </mat-card-actions>\n  </mat-card>\n\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\n@Component({\n  selector: 'app-rightclick',\n  templateUrl: './rightclick.component.html',\n  styleUrls: ['./rightclick.component.scss']\n})\nexport class RightclickComponent implements OnInit {\n  @ViewChild('basicMenu') contextMenu: ContextMenuComponent;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  showMessage(message: any) {\n    console.log(message);\n  }\n  \n}\n","<context-menu #basicMenu>\n\t<ng-template contextMenuItem [subMenu]=\"subMenuMove\">\n\t\tMove\n\t</ng-template>\n\n  <ng-template contextMenuItem divider=\"true\"></ng-template>\n\n\t<context-menu #subMenuMove>\n\t\t<ng-template contextMenuItem>\n\t\t\tRight\n\t\t</ng-template>\n\t\t<ng-template contextMenuItem>\n\t\t\tLeft\n\t\t</ng-template>\n\t</context-menu>\n\t<ng-template contextMenuItem (execute)=\"showMessage('Hi, ' + $event.item.name)\">\n\t\tSay hi!\n\t</ng-template>\n\t<ng-template contextMenuItem divider=\"true\"></ng-template>\n\t<ng-template contextMenuItem let-item (execute)=\"showMessage($event.item.name + ' said: ' + $event.item.otherProperty)\">\n\t\tBye, {{item?.name}}\n\t</ng-template>\n\t<!-- <ng-template contextMenuItem passive=\"true\">\n    Input something: <input type=\"text\">\n  </ng-template> -->\n</context-menu>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ContextMenuComponent, ContextMenuService } from 'ngx-contextmenu';\nimport { RightclickComponent } from '../rightclick/rightclick.component';\n\n@Component({\n  selector: 'app-rightclickservice',\n  templateUrl: './rightclickservice.component.html',\n  styleUrls: ['./rightclickservice.component.scss']\n})\nexport class RightclickserviceComponent implements OnInit {\n\n  name = 'Angular';\n  public item = { name: 'John', otherProperty: 'Foo' };\n  @ViewChild(RightclickComponent) rightClick: RightclickComponent;\n\n  constructor(private contextMenuService: ContextMenuService) { }\n\n  public onContextMenu($event: MouseEvent, item: any): void {\n    this.contextMenuService.show.next({\n      contextMenu: this.rightClick.contextMenu,\n      event: $event,\n      item: item\n\n    });\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    Right click on someone's name:\n  </p>\n  <ul>\n      <li\n          (contextmenu)=\"onContextMenu($event, item)\"\n          >\n          <!-- [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"item\" -->\n        {{item?.name}}\n        </li>\n  </ul>\n  \n  <app-rightclick><app-rightclick>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}